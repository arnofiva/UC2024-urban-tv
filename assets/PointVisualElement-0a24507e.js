import{dh as l,f7 as h,f8 as u,fi as a,fl as g,fm as f,fn as x,bv as S,ej as _,fo as v,fp as z,fq as y,en as b,fr as p,fs as E,ft as I,eo as C}from"./index-cc5260cc.js";import{a as $}from"./LineVisualElement-809b4807.js";class T extends ${constructor(e){super(e),this._material=null,this._texture=null,this._geometry=null,this._size=3,this._color=l(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=l(1,1,1,1),this._elevationInfo=null,this.applyProperties(e)}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this._preferredTextureSize;this._size=e,t<this._preferredTextureSize?this.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){h(e,this._color)||(u(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,this.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){h(e,this._outlineColor)||(u(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.recreateGeometry()}_updateMaterial(){this._material&&this._material.setParameters(this._materialParameters)}_updateSizeAttribute(){const e=this.object;if(e==null)return;const t=e.geometries[0];if(t==null)return;const i=t.getMutableAttribute(a.SIZE).data,s=this._geometrySize;i[0]=s,i[1]=s,e.geometryVertexAttributeUpdated(e.geometries[0],a.SIZE)}get _materialParameters(){return{color:this._color,textureIsSignedDistanceField:!0,sampleSignedDistanceFieldTexelCenter:g(this._primitive),distanceFieldBoundingBox:w,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:this._texture?.id,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled,isDecoration:this.isDecoration}}get _geometrySize(){return this._size/r}createExternalResources(){this._texture=f(this._primitive,this._preferredTextureSize),this._material=new x(this._materialParameters);const e=this.view._stage;this._texture.load(e.renderView.renderingContext),e.add(this._texture)}destroyExternalResources(){this._texture&&(this.view._stage.remove(this._texture),this._texture.dispose(),this._texture=null),this._material=null}createGeometries(e){const t=this._createRenderGeometry();t!=null&&e.addGeometry(t)}forEachExternalMaterial(e){this._material&&e(this._material)}get _preferredTextureSize(){return S(2*this._geometrySize,16,128)}calculateMapBounds(e){const t=this.object?.geometries[0];if(!t)return!1;const i=t.attributes.get(a.POSITION).data;return _(i,this.view.renderCoordsHelper.spatialReference,d,this.view.spatialReference),v(e,d),!0}_createRenderGeometry(){const{geometry:e,_material:t}=this;if(e==null||t==null)return null;const{renderCoordsHelper:i,elevationProvider:s}=this.view,c=z(e,s,y.fromElevationInfo(this.elevationInfo),i),m=b(p.get(),e.x,e.y,c),o=p.get();_(m,e.spatialReference,o,i.spatialReference);const n=this._geometrySize;return E(t,null,o,null,[n,n],[0,0,0,1])}}const r=I,w=[r/2,r/2,1-r/2,1-r/2],d=C();export{T as x};
