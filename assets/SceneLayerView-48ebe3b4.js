import{cC as P,mT as k,bq as j,ed as U,aj as g,am as N,ak as y,aR as V,ai as z,aq as S,h0 as G,aL as O,nD as K,nE as B,eu as H,dP as J,aH as Q,c$ as L,au as T,ax as W,nF as M,es as X,et as Y,a$ as Z}from"./index-b9c5f9ae.js";import{r as ee}from"./featureQueryAll-129e8c41.js";import{a as te,n as re,b as ne}from"./TemporalSceneLayerView-1ea0d84c.js";import{y as ie}from"./LayerView-fa457db7.js";const oe={setAttribute(){},rollback(){},commit(){}};var w;function he(e,t){const r=t.attributes[e.objectIdField];if(r==null)return oe;const n=e.sessions.get(r);if(n)return n;const i=P(t.attributes),o=new Set,a=e.i3sOverrides.createInteractiveEditSession(r),s=new Map,f=(c,d)=>{const p=s.get(c);if(p==null){const m=d.indexOf(r);return s.set(c,m),m}return p};let l=w.EDITING;const u={setAttribute(c,d){if(l!==w.EDITING)return;const p=e.fieldsIndex.get(c);if(!p)return;const m=e.attributeStorageInfo.findIndex(b=>b.name===p.name);if(m<0)return;if(!(c in i))throw new Error(`Attribute "${c}" is not an attribute of the edited feature.`);a.setAttribute(m,d);const F=e.attributeStorageInfo[m];let E=!1;o.add(c),e.forEachNode((b,x)=>{const A=f(b,x);if(A===-1)return;const _=e.getAttributeData(b.index);if(_){const v=_[F.name];v&&(v[A]=d,e.setAttributeData(b.index,_,t),E=!0)}}),E&&e.clearMemCache()},rollback(){if(l===w.EDITING){for(const c of o)this.setAttribute(c,i[c]);a.remove(),l=w.ROLLED_BACK,e.sessions.delete(r)}},commit(){l===w.EDITING&&(a.remove(),l=w.COMMITTED,e.sessions.delete(r))}};return e.sessions.set(r,u),u}function se(e,t,r){const{gidToFeatureInfo:n,oidToFeatureInfo:i,fieldsIndex:o,objectIdField:a,globalIdField:s,featureOrIdentifierList:f}=r;if(!r.featuresResolved&&f!=null){for(const l of f){const u={feature:null,oid:-1,gid:null};if("attributes"in l){u.feature=l;const c=l.attributes;if(c!=null)for(const d in c){if(u.oid!==-1&&u.gid!=null)break;const p=o.normalizeFieldName(d);p===a&&(u.oid=c[d]??-1),p===s&&(u.gid=c[d])}}else u.oid=l.objectId??-1,u.gid=l.globalId;u.gid!=null&&n.set(u.gid,u),u.oid!==-1&&i.set(u.oid,u)}r.featuresResolved=!0}return(e!==-1?i.get(e):null)??(t!=null?n.get(t):null)}function $(e,t,r,n,i=null,o=!0){const a=[],s={gidToFeatureInfo:new Map,oidToFeatureInfo:new Map,featuresResolved:r==null,fieldsIndex:e.fieldsIndex,objectIdField:e.objectIdField,globalIdField:e.globalIdField,featureOrIdentifierList:r};for(const f of t){if(f.error!=null)continue;const l=f.objectId??-1,u=f.globalId,c=(l===-1||o?se(l,u,s):null)??{feature:null,oid:l,gid:u},d={oid:l===-1?c.oid:l,gid:u??c.gid,feature:c.feature,result:f};if(a.push(d),d.oid===-1&&d.gid!=null&&i!=null&&(d.oid=i.get(d.gid)??-1),d.oid===-1&&d.gid!=null){let p=n.get(d.gid);p==null&&(p=[],n.set(d.gid,p)),p.push(d)}}return a}async function be(e,t){const r=new Map,n=$(e,t.addedFeatures,t.edits?.addFeatures,r),i=$(e,t.updatedFeatures,t.edits?.updateFeatures,r),o=$(e,t.deletedFeatures,t.edits?.deleteFeatures,r,t.globalIdToObjectId,!1);return r.size>0&&await le(e,r),{adds:n.filter(a=>a.oid!==-1),updates:i.filter(a=>a.oid!==-1),deletes:o.filter(a=>a.oid!==-1)}}async function le(e,t){const r=e.i3sOverrides.layer.associatedLayer;if(r?.globalIdField==null)return;const n=r.createQuery(),{objectIdField:i,globalIdField:o}=r;n.where=Array.from(t.keys()).map(f=>`${o}='${f}'`).join(" OR "),n.returnGeometry=!1,n.outFields=[i,o],n.cacheHint=!1;const a=await k(ee(r,n));if(!a.ok)return;const s=a.value.features;for(const f of s){const l=f.attributes[o],u=f.attributes[i];if(l==null||u==null||u===-1)continue;const c=t.get(l);if(c!=null)for(const d of c)d.oid=u}}function Fe(e,t){const r=new Map,n=i=>{for(const{oid:o,feature:a}of i){const s=a?.geometry;s?.type==="mesh"&&r.set(o,s)}};n(t.adds),n(t.updates);for(const i of t.deletes)r.set(i.oid,null);for(const[i,o]of r)e.i3sOverrides.updateGeometry(i,o)}function Ie(e,t){const r=de(e,t),n=ae(e,t);if(r.size===0&&n.size===0)return;const i=new Map;for(let d=0;d<e.attributeStorageInfo.length;d++)i.set(e.attributeStorageInfo[d].name,d);let o=!1;r.forEach((d,p)=>{const m=e.getAttributeData(p);let F=!1;d.forEach((E,b)=>{const x=m!=null?m[b]:null,A=i.get(b);for(const{featureIndex:_,value:v,featureId:q}of E)x&&(x[_]=v,F=!0,o=!0),e.i3sOverrides.updateAttributeValue(q,A,v)}),F&&e.setAttributeData(p,m,null)}),o&&e.clearMemCache();const{fieldsIndex:a,i3sOverrides:s,objectIdField:f,globalIdField:l}=e,u=s.layer.associatedLayer?.infoFor3D,c=new Set(u?[...Object.values(u.assetMapFieldRoles),...Object.values(u.transformFieldRoles)]:[]);for(const[d,p]of n){s.featureAdded(d);const{attributes:m}=p;for(const F in m){if(F!==f&&F!==l&&c.has(F))continue;const E=a.normalizeFieldName(F),b=E!=null?i.get(E):null;if(b==null)continue;const x=m[F];s.updateAttributeValue(d,b,x)}}}function ae(e,t){const r=new Map,n=t.adds;if(!n||n.length===0||e.globalIdField==null)return r;for(const i of n){const o=i.oid,a=i.feature;a?.geometry?.type==="mesh"&&r.set(o,a)}return r}function de(e,t){const r=t.updates;if(!r||r.length===0)return new D;const n=new D,i=new Map;for(let o=0;o<e.attributeStorageInfo.length;o++)i.set(e.attributeStorageInfo[o].name,o);return e.forEachNode((o,a)=>{for(const s of r){if(s.feature==null)continue;const f=s.feature,l=s.oid,u=a.indexOf(l);for(const c in f.attributes){const d=e.fieldsIndex.normalizeFieldName(c),p=ue(n,o.index,d),m=f.attributes[c];p.push({featureIndex:u,featureId:l,value:m})}}}),n}function ue(e,t,r){const n=ce(e,t),i=r!=null&&n.get(r);if(i)return i;const o=new Array;return n.set(r,o),o}function ce(e,t){const r=e.get(t);if(r)return r;const n=new fe;return e.set(t,n),n}(function(e){e[e.EDITING=0]="EDITING",e[e.ROLLED_BACK=1]="ROLLED_BACK",e[e.COMMITTED=2]="COMMITTED"})(w||(w={}));const fe=Map,D=Map;function we(){return{requiredFields:{type:[String],readOnly:!0},availableFields:{type:[String],readOnly:!0,get:function(){const{layer:e,layer:{fieldsIndex:t},requiredFields:r}=this;return e.outFields?j(t,[...U(t,e.outFields),...r]):j(t,r)}}}}const C=e=>{let t=class extends e{constructor(){super(...arguments),this._numUpdating=0}get updating(){return this._numUpdating>0}autoUpdateAsync(r,n){const i=G(async o=>{++this._numUpdating;try{const a=await o;this.destroyed||this._set(r,a)}catch{O.getLogger(this).warn(`Async update of "${String(r)}" failed. Async update functions should not throw exceptions.`)}--this._numUpdating});return V(n,i,z)}};return g([y({readOnly:!0})],t.prototype,"updating",null),g([y()],t.prototype,"_numUpdating",void 0),t=g([N("esri.core.AsyncUpdate")],t),t};let R=class extends C(S){};R=g([N("esri.core.AsyncUpdate")],R);let I=class extends C(S){get layer(){return this.layerView.layer}get requiredFields(){const{layerView:{layer:{fieldsIndex:e},definitionExpressionFields:t},rendererFields:r,labelingFields:n,viewFilterFields:i}=this;return j(e,[...t??[],...r??[],...n??[],...i??[]])}constructor(e){super(e)}initialize(){this.addHandles([this.autoUpdateAsync("rendererFields",async()=>{const{fieldsIndex:e,renderer:t}=this.layer;return t?this._getFieldsAsync(r=>t.collectRequiredFields(r,e)):null}),this.autoUpdateAsync("labelingFields",async()=>{const{layer:e}=this;return e.labelsVisible?this._getFieldsAsync(t=>K(t,e)):null}),this.autoUpdateAsync("viewFilterFields",()=>{const{layer:e,mergedFilter:t}=this.layerView;return this._getFieldsAsync(r=>B(r,e,t))})])}async _getFieldsAsync(e){const t=new Set;try{return await e(t),Array.from(t).sort()}catch(r){return O.getLogger(this).error(r),null}}};g([y()],I.prototype,"layerView",void 0),g([y()],I.prototype,"layer",null),g([y()],I.prototype,"requiredFields",null),g([y()],I.prototype,"rendererFields",void 0),g([y()],I.prototype,"labelingFields",void 0),g([y()],I.prototype,"viewFilterFields",void 0),I=g([N("esri.views.3d.layers.support.SceneLayerViewRequiredFields")],I);let h=class extends ie{constructor(){super(...arguments),this.layer=null,this.filter=null,this._geometryEngine=null,this._projectionEngineLoaded=!1,this._abortController=new AbortController}get availableFields(){return[]}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(e){throw new Error("Not implemented")}get maximumNumberOfFeaturesExceeded(){return!1}get layerFilter(){return te(this._layerFilter)}get _layerFilter(){const e=this.layer?.filter;if(e==null||e.geometries.length<1)return null;const t=this._geometryEngine;if(t==null||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine)return re;const r=e.geometries.at(0).spatialReference,n=e.geometries.toArray().map(s=>{try{s=t.simplify(s)}catch{return O.getLogger(this).warnOncePerTick("Failed to simplify scene filter mask polygon. Polygon will be ignored."),null}if(s==null)return null;if(s.spatialReference.equals(r))return s;try{return H(s,r)}catch{return O.getLogger(this).warnOncePerTick("Failed to project scene filter mask polygon. Polygon will be ignored."),null}}).filter(J).sort((s,f)=>s.extent.xmin-f.extent.xmin),i=new Set,o=new Array,a=new Array;for(let s of n){const f=s.extent.xmin;if(o.length=0,i.forEach(l=>{if(f>=l.extent.xmax)return a.push(l),void i.delete(l);s.extent.ymin<=l.extent.ymax&&s.extent.ymax>=l.extent.ymin&&t.intersects(s,l)&&o.push(l)}),o.length>0){o.push(s);try{s=t.union(o)}catch{O.getLogger(this).warnOncePerTick("Failed to unify filter mask polygons. Polygon will be ignored.");continue}o.pop(),o.forEach(l=>i.delete(l))}i.add(s)}return i.forEach(s=>a.push(s)),a.length>0?{spatialRelationship:e.spatialRelationship,geometries:a}:null}get _filterNeedsProjectionEngine(){const e=this.layer.filter;if(e==null||e.geometries.length<=1)return!1;const t=e.geometries.at(0).spatialReference;return e.geometries.some(({spatialReference:r})=>!r.equals(t)&&!Q(r,t))}get layerFilterUpdating(){return ne(this._layerFilter)}initialize(){const{signal:e}=this._abortController;L(()=>this.destroyed||!this._geometryEngine&&this.layer?.filter?.geometries?.length,e).then(async()=>{T(e),this._geometryEngine=await W(()=>import("./geometryEngine-3592e805.js"),["./geometryEngine-3592e805.js","./geometryEngineBase-110537d2.js","./index-b9c5f9ae.js","./index-e15ba190.css","./hydrated-c8750e78.js"],import.meta.url)}).catch(M),this._projectionEngineLoaded=X(),L(()=>this.destroyed||!this._projectionEngineLoaded&&this._filterNeedsProjectionEngine,e).then(async()=>{T(e),await Y(),this._projectionEngineLoaded=!0}).catch(M)}destroy(){this._abortController=Z(this._abortController)}highlight(e){throw new Error("Not implemented")}queryFeatures(e,t){throw new Error("Not implemented")}queryObjectIds(e,t){throw new Error("Not implemented")}queryFeatureCount(e,t){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,t){throw new Error("Not implemented")}};g([y()],h.prototype,"layer",void 0),g([y()],h.prototype,"availableFields",null),g([y()],h.prototype,"maximumNumberOfFeatures",null),g([y({readOnly:!0})],h.prototype,"maximumNumberOfFeaturesExceeded",null),g([y()],h.prototype,"filter",void 0),g([y({readOnly:!0})],h.prototype,"layerFilter",null),g([y({readOnly:!0})],h.prototype,"_layerFilter",null),g([y()],h.prototype,"_geometryEngine",void 0),g([y()],h.prototype,"_projectionEngineLoaded",void 0),g([y()],h.prototype,"_filterNeedsProjectionEngine",null),g([y()],h.prototype,"layerFilterUpdating",null),h=g([N("esri.views.layers.SceneLayerView")],h);const xe=h;export{I as a,we as b,Fe as d,Ie as f,he as i,be as u,xe as w};
