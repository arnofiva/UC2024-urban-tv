import{d6 as Rt,um as vt,bU as te,bV as ut,aL as oe,at as O,hJ as Le,bP as A,bS as L,av as ht,hp as St,bT as z,ig as Tt,aj as b,ak as R,am as K,cA as _t,ax as ze,ev as Xe,al as kt,az as Ft,r$ as Ct,dH as Mt,b6 as Ot,un as Pt,k4 as ft,uo as $t,dP as Be,aU as Bt,d5 as Dt,jf as Nt,aF as Et,gT as Jt,gU as At,ar as Lt,cH as zt,h0 as Ht,au as Wt,cy as he,h4 as ye,aR as Gt,hj as jt,dd as Ut,cL as qt,aB as Vt}from"./index-cc5260cc.js";import{l as Yt}from"./ArcGISService-1e89e6ee.js";import{e as Xt}from"./CustomParametersMixin-022b66c4.js";import{h as mt,D as dt,i as Kt,a as Qt,p as He,c as Zt,N as De,l as ei,d as ti,b as ii,e as si,f as Ke,o as ni,g as Qe,$ as Ze,W as et,j as ri,q as ai,U as oi,E as li,L as tt,t as ci,k as ui,m as hi,n as fi}from"./fetchRasterInfo-a486c2ab.js";import{p as pt,y as mi}from"./commonProperties-cc82f359.js";import{U as ke,j as di,n as ve,D as yt,R as pi,u as yi,l as gi,a as xi,g as q,f as wi,m as We,s as Ii,L as bi,b as Ri,c as Se,E as vi,W as Si,h as Ti,d as Ge,P as _i,T as ki,r as Fi,e as it,F as Ci,i as Mi,N as Oi,k as ge,B as Pi,o as $i,p as Bi,q as Di}from"./dataUtils-96d14b30.js";import{T as Ne,D as xe,j as st,r as nt,o as Ni,V as Fe,J as be,e as Ei,Z as Ji,C as Ai,U as Ee}from"./rasterProjectionHelper-77189731.js";import{d as je}from"./FeatureSet-61e08bb9.js";import{S as gt,y as Ue,c as Li,R as zi}from"./PolynomialTransform-610ee2ad.js";import{b as Hi}from"./OperationalLayer-eea4a77f.js";import{j as Wi}from"./PortalLayer-cb90e0d1.js";import{f as Gi}from"./RefreshableLayer-79d78805.js";import{l as ji}from"./TemporalLayer-05e13040.js";import{j as Ui}from"./TilemapCache-3fa08614.js";import{p as qi}from"./popupUtils-0f067087.js";import"./UniqueValueRenderer-54c126a1.js";import"./ColorStop-e7316361.js";import"./diffUtils-b3bd11bb.js";import"./colorRamps-381886f3.js";import"./normalizeUtils-41f60ca4.js";import"./normalizeUtilsCommon-c508a8dd.js";import"./ClassBreaksDefinition-4f1ef2f1.js";import"./layerContainerType-e1118fe6.js";import"./TimeInfo-d0e81af7.js";let Vi=class{constructor(e=15e3,s=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,s)}decreaseRefCount(e,s){const t=e+"/"+s,n=this._cachedBlocks;if(n.has(t)){const a=n.get(t);return a.refCount--,a.refCount<=0&&(n.delete(t),a.controller&&a.controller.abort()),a.refCount}return 0}getBlock(e,s){const t=e+"/"+s,n=this._cachedBlocks;if(n.has(t)){const a=n.get(t);return a.ts=Date.now(),a.refCount++,n.delete(t),n.set(t,a),a.block}return null}putBlock(e,s,t,n){const a=this._cachedBlocks,r=e+"/"+s;if(a.has(r)){const o=a.get(r);o.ts=Date.now(),o.refCount++}else a.set(r,{block:t,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,s){const t=this._cachedBlocks,n=e+"/"+s;t.has(n)&&t.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const s=Array.from(e),t=Date.now();for(let n=0;n<s.length&&s[n][1].ts<=t-this._duration;n++)e.delete(s[n][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const s=Array.from(e);for(let t=0;t<s.length-this._size;t++)e.delete(s[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const Te=new Map,ie=new Vi;function rt(i,e){return e==null?i:`${i}?sliceId=${e}`}function Yi(i,e,s){const t=Te.get(i);if(!t)return e==null?ie.decreaseRefCount(i,s):0;if(e==null||t[e]==null)return ie.decreaseRefCount(i,s);const n=t[e]?.cache,a=n?.get(s);if(n&&a){if(a.refCount--,a.refCount===0){n.delete(s);for(let r=0;r<t.length;r++)t[r]?.cache.delete(s);a.controller&&a.controller.abort()}return a.refCount}return 0}function at(i,e,s){const t=Te.get(i);if(!t)return e==null?ie.getBlock(i,s):null;if(e==null||t[e]==null){for(let a=0;a<t.length;a++){const r=t[a]?.cache.get(s);if(r)return r.refCount++,r.block}return ie.getBlock(i,s)}const n=t[e]?.cache.get(s);if(n)return n.refCount++,n.block;for(let a=0;a<t.length;a++){if(a===e||!t[a])continue;const r=t[a]?.cache,o=r?.get(s);if(r&&o)return o.refCount++,r.set(s,o),o.block}return null}function ot(i,e,s,t,n=null){const a=Te.get(i);if(!a)return void(e==null&&ie.putBlock(i,s,t,n));if(e==null||a[e]==null)return void ie.putBlock(i,s,t,n);const r={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:n};t.then(()=>r.isResolved=!0).catch(()=>r.isRejected=!0),a[e]?.cache.set(s,r)}function Xi(i,e,s){const t=Te.get(i);t?e!=null&&t[e]!=null?t[e]?.cache.delete(s):ie.deleteBlock(i,s):e==null&&ie.deleteBlock(i,s)}const lt=8,Ki=256;let Qi=0,J=class extends Rt(_t){constructor(){super(...arguments),this._tileFetchQueue=new vt({concurrency:32,process:(i,e)=>this._fetchRawTile(i.pyramidLevel,i.row,i.col,{...i.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const i=Ne();this.addResolvingPromise(i),await this.when()}normalizeCtorArgs(i){return i?.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:te.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=xe(i.spatialReference);return e!=null&&i.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:i}=this.rasterInfo;return i==null||i.type==="gcs-shift"}set rasterJobHandler(i){this._set("rasterJobHandler",i),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=i)}get rasterId(){return this.url||"rasterId-"+Qi++}set url(i){this._set("url",ut(i,oe.getLogger(this)))}async open(i){throw new O("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(i,e,s,t={}){const n=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,a=this.getTileExtentFromTileInfo(i,e,s,n);return t={noClip:!0,...t},this.fetchPixels(a,n.size[0],n.size[1],t)}async identify(i,e={}){i=Le(A,i).clone().normalize();const{multidimensionalDefinition:s,timeExtent:t}=e,{rasterInfo:n}=this,{hasMultidimensionalTranspose:a,multidimensionalInfo:r}=n;let{transposedVariableName:o}=e;const l=r!=null&&a&&(t!=null||mt(s));l&&!o&&(o=s!=null&&s.length>0?s[0].variableName??void 0:r.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=n,{datumTransformation:h}=e;let f=st(i,c,h);if(!u.intersects(f))return{location:f,value:null};if(n.transform!=null){const k=n.transform.inverseTransform(f);if(!n.nativeExtent.intersects(k))return{location:k,value:null};f=k}let d=0;const y=o!=null&&r!=null&&n.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const k=this.primaryRasters.rasters[0];if(y)return k.identify(f,e);const{pixelSize:P}=n,M=3,$=P.x*M/2,B=P.y*M/2,D=new L({xmin:f.x-$,xmax:f.x+$,ymin:f.y-B,ymax:f.y+B,spatialReference:c}),E={interpolation:"nearest",multidimensionalDefinition:s,sliceId:e.sliceId},{pixelBlock:V}=await k.fetchPixels(D,M,M,E),{pixelBlock:W}=await this.fetchPixels(D,M,M,E);if(V==null)return{location:f,value:null};const G=Math.floor(M*M*.5),Q=!V.mask||V.mask[G]?V.pixels.map(U=>U[G]):null;let se;return W!=null&&(se=!W.mask||W.mask[G]?W.pixels.map(U=>U[G]):void 0),{location:f,value:Q,processedValue:se,pyramidLevel:0}}if(!y){if(e.srcResolution)d=nt(e.srcResolution,n,this.ioConfig.sampling).pyramidLevel;else if(d=await this.computeBestPyramidLevelForLocation(i,e),d==null)return{location:f,value:null}}const g=this.identifyPixelLocation(f,d,null,y);if(g===null)return{location:f,value:null};const{row:m,col:p,rowOffset:x,colOffset:I,blockWidth:w}=g,T=o??e.sliceId,v=rt(this.rasterId,T),S=`${d}/${m}/${p}`;let F=at(v,null,S);F==null&&(F=this.fetchRawTile(d,m,p,e),ot(v,null,S,F));const _=await F;if(!_?.pixels?.length)return{location:f,value:null};const C=x*w+I;return this._processIdentifyResult(_,{srcLocation:f,position:C,pyramidLevel:d,useTransposedTile:!!y,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(i,e,s,t={}){i=Ni(i),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:n}=this;if(t.requestRawData&&n)return this._fetchPixels(i,e,s,t);const a=xe(i.spatialReference),r=Fe(i);if(a==null||r===0||r===1&&this._isGlobalWrappableSource&&n)return this._fetchPixels(i,e,s,t);if(r>=3)return{extent:i,pixelBlock:null};const o=[],{xmin:l,xmax:c}=i,u=Math.round(a/(c-l)*e),h=u-Math.round((a/2-l)/(c-l)*e);let f=0;const d=[];for(let p=0;p<=r;p++){const x=new L({xmin:p===0?l:-a/2,xmax:p===r?c-a*p:a/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),I=p===0?u-h:p===r?e-f:u;f+=I,d.push(I);const w=t.disableWrapAround&&p>0?null:this._fetchPixels(x,I,s,t);o.push(w)}const y=(await Promise.all(o)).map(p=>p?.pixelBlock);let g=null;const m={width:e,height:s};return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:m,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},t)).pixelBlock:g=ke(y,m,{blockWidths:d}),{extent:i,srcExtent:be(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:g}}async fetchRawPixels(i,e,s,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const n=await this._fetchRawTiles(i,e,s,t),{nativeExtent:a,nativePixelSize:r,storageInfo:o}=this.rasterInfo,l=2**i,c=r.x*l,u=r.y*l,h=new L({xmin:a.xmin+c*e.x,xmax:a.xmin+c*(e.x+s.width-1),ymin:a.ymax-u*(e.y+s.height-1),ymax:a.ymax-u*e.y,spatialReference:a.spatialReference});if(!n)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:d}=n;if(f.length===1&&f[0]!=null&&f[0].width===s.width&&f[0].height===s.height)return{extent:h,srcExtent:h,pixelBlock:n.pixelBlocks[0]};const y=i>0?o.pyramidBlockWidth:o.blockWidth,g=i>0?o.pyramidBlockHeight:o.blockHeight,m={x:e.x%y,y:e.y%g};let p;return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:d,destDimension:s,clipOffset:m,clipSize:s,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:p=ke(f,d,{clipOffset:m,clipSize:s}),{extent:h,srcExtent:h,pixelBlock:p}}fetchRawTile(i,e,s,t){throw new O("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return be(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?di(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,s=0){const{customFetchParameters:t}=this.ioConfig,{range:n,query:a,headers:r}=e;s=s??e.retryCount??this.ioConfig.retryCount;const o=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await ht(i,{...e,query:{...a,...t},headers:{...r,...o}})}catch(l){if(s>0)return s--,this.request(i,e,s);throw l}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||i==null||i.length===0?null:dt(i,e)}getTileExtentFromTileInfo(i,e,s,t){const n=t.lodAt(i);return this.getTileExtent({x:n.resolution,y:n.resolution},e,s,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:s,pixelSize:t}=this.rasterInfo,{pyramidResolutions:n}=i;if(!i.tileInfo){const a=[],r=i.maximumPyramidLevel||0;let o=(t.x+t.y)/2,l=1/.0254*96*o;for(let u=0;u<=r&&(a.unshift(new St({level:r-u,resolution:o,scale:l})),u!==r);u++)if(n){const h=(n[u].x+n[u].y)/2;l*=h/o,o=h}else o*=2,l*=2;const c=new A({x:s.xmin,y:s.ymax,spatialReference:e});i.tileInfo=new te({origin:c,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:a}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,s=512,t){const{width:n,height:a,nativeExtent:r,pixelSize:o,spatialReference:l}=i,c=new A({x:r.xmin,y:r.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this.computeBlockBoundary(r,512,512,{x:r.xmin,y:r.ymax},[o],t);i.storageInfo=new ve({blockWidth:e,blockHeight:s,pyramidBlockWidth:e,pyramidBlockHeight:s,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,s,t,n,a=0,r=2){if(n.length===1&&a>0){n=[...n];let{x:u,y:h}=n[0];for(let f=0;f<a;f++)u*=r,h*=r,n.push({x:u,y:h})}const o=[],{x:l,y:c}=t;for(let u=0;u<n.length;u++){const{x:h,y:f}=n[u];o.push({minCol:Math.floor((i.xmin-l+.1*h)/e/h),maxCol:Math.floor((i.xmax-l-.1*h)/e/h),minRow:Math.floor((c-i.ymax+.1*f)/s/f),maxRow:Math.floor((c-i.ymin-.1*f)/s/f)})}return o}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(s!=null&&s.length)return s[i-1];const n=t**i;return{x:e.x*n,y:e.y*n}}identifyPixelLocation(i,e,s,t){const{spatialReference:n,nativeExtent:a,storageInfo:r}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=r,u=t&&c!=null?c.tileSize[0]:r.blockWidth,h=t&&c!=null?c.tileSize[1]:r.blockHeight,f=st(i,n,s);if(!a.intersects(f)||e<0||e>o)return null;const d=this.getPyramidPixelSize(e),{x:y,y:g}=d,m=(l.y-f.y)/g/h,p=(f.x-l.x)/y/u,x=Math.min(h-1,Math.floor((m-Math.floor(m))*h)),I=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(p),rowOffset:x,colOffset:I,blockWidth:u,srcLocation:f}}getTileExtent(i,e,s,t,n,a){const[r,o]=a,l=t.x+s*r*i.x,c=l+r*i.x,u=t.y-e*o*i.y,h=u-o*i.y;return new L({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,s){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<s||t.minRow>e||t.minCol>s}updateImageSpaceRasterInfo(i){const{extent:e,pixelSize:s}=i;if(e.xmin===-.5&&e.ymax===.5&&s.x===1&&s.y===1&&i.transform==null)return;const{width:t,height:n}=i,a=z.WebMercator;i.spatialReference=a,i.extent=i.nativeExtent=new L({xmin:-.5,ymax:.5,xmax:t-.5,ymin:.5-n,spatialReference:a}),i.isPseudoSpatialReference=!0,i.transform=null,i.pixelSize=new A({x:1,y:1,spatialReference:a});const{extent:r,storageInfo:o}=i;if(o){o.origin=new A({x:r.xmin,y:r.ymax,spatialReference:a});const{pyramidResolutions:l,tileInfo:c}=o;if(l&&l.forEach(u=>{u.x/=s.x,u.y/=s.y}),c){c.origin=o.origin;const u=(i.nativePixelSize.x+i.nativePixelSize.y)/2;c.lods.forEach((h,f)=>{h.resolution=u*2**f,h.scale=96*h.resolution/.0254})}}}async _fetchPixels(i,e,s,t={}){let n=Fe(i);if(n>=2)return{extent:i,pixelBlock:null};const a=this._getSourceDataInfo(i,e,s,t),{pyramidLevel:r,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=a;if(c===0||u===0)return{extent:i,srcExtent:l,pixelBlock:null};const{rasterInfo:f}=this,d=f.transform,y=d?.type==="gcs-shift",g=xe(i.spatialReference)!=null;!y&&g||(n=Fe(a.srcExtent,y));const m=await this._fetchRawTiles(r,h,{width:c,height:u,wrapCount:n},t);if(!m)return{extent:i,srcExtent:l,pixelBlock:null};const p=f.storageInfo,x=r>0?p.pyramidBlockWidth:p.blockWidth,I=r>0?p.pyramidBlockHeight:p.blockHeight;let{x:w,y:T}=f.pixelSize;if(r>0){const{pyramidResolutions:Z,pyramidScalingFactor:bt}=p;if(Z!=null&&Z[r-1])({x:w,y:T}=Z[r-1]);else{const Ye=bt**r;w*=Ye,T*=Ye}}const v=f.spatialReference,S=new A({x:w,y:T,spatialReference:v}),F=x===c&&I===u&&h.x%x==0&&h.y%I==0,_=new A({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference}),C=!i.spatialReference.equals(v),k=v.isGeographic?1e-9:1e-4,{datumTransformation:P}=t;if(!C&&F&&m.pixelBlocks.length===1&&x===e&&I===s&&Zi(o,_,k))return{extent:i,srcExtent:l,srcTilePixelSize:S,pixelBlock:m.pixelBlocks[0]};const M=g&&xe(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,$=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");$&&!this.rasterJobHandler&&await Ne();const B=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:m.extent,pixelSize:_.toJSON(),datumTransformation:P,rasterTransform:d,hasWrapAround:n>0||M,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:$},t):Ei({projectedExtent:i,srcBufferExtent:m.extent,pixelSize:_,datumTransformation:P,rasterTransform:d,hasWrapAround:n>0||M,isAdaptive:!1,includeGCSGrid:$});let D;const E=!t.requestRawData,V={rows:B.spacing[0],cols:B.spacing[1]},W=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(r,m.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:Q,isPartiallyFilled:se}=m;let U=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:U}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:Q,destDimension:E?{width:e,height:s}:null,coefs:E?B.coefficients:null,sampleSpacing:E?V:null,projectDirections:$,gcsGrid:$?B.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:W,blockWidths:null},t));else{const Z=ke(G,Q,{alignmentInfo:W});D=E?yt(Z,{width:e,height:s},B.coefficients,V,t.interpolation):Z,$&&B.gcsGrid&&(U=pi({width:e,height:s},B.gcsGrid),D=yi(D,this.rasterInfo.dataType,U))}return t.requestRawData||$?{extent:i,srcExtent:l,srcTilePixelSize:S,pixelBlock:D,transformGrid:B,localNorthDirections:U,isPartiallyFilled:se}:{extent:i,srcExtent:l,srcTilePixelSize:S,pixelBlock:D}}async _fetchRawTiles(i,e,s,t){const{origin:n,blockBoundary:a}=this.rasterInfo.storageInfo,{blockWidth:r,blockHeight:o}=this.getBlockWidthHeight(i);let{x:l,y:c}=e,{width:u,height:h,wrapCount:f}=s;const d=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let y=0,g=0,m=0;f&&d!=null&&({worldColumnCountFromOrigin:g,originColumnOffset:m,rightPadding:y}=d,g*d.blockWidth-y>=l+u&&(y=0));const p=Math.floor(l/r),x=Math.floor(c/o),I=Math.floor((l+u+y-1)/r),w=Math.floor((c+h+y-1)/o),T=a[i];if(!T)return null;const{minRow:v,minCol:S,maxCol:F,maxRow:_}=T;if(f===0&&(w<v||I<S||x>_||p>F))return null;const C=new Array;let k=!1;const P=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let W=x;W<=w;W++)for(let G=p;G<=I;G++){let Q=G;if(!t.disableWrapAround&&f&&d!=null&&g<=G&&(Q=G-g-m),W>=v&&Q>=S&&_>=W&&F>=Q){const se=this._tileFetchQueue.push({pyramidLevel:i,row:W,col:Q,options:t},{signal:t.signal});P?C.push(new Promise(U=>{se.then(Z=>U(Z)).catch(()=>{k=!0,U(null)})})):C.push(se)}else C.push(Promise.resolve(null))}if(C.length===0)return null;const M=await Promise.all(C),$={height:(w-x+1)*o,width:(I-p+1)*r},{spatialReference:B}=this.rasterInfo,D=this.getPyramidPixelSize(i),{x:E,y:V}=D;return{extent:new L({xmin:n.x+p*r*E,xmax:n.x+(I+1)*r*E,ymin:n.y-(w+1)*o*V,ymax:n.y-x*o*V,spatialReference:B}),pixelBlocks:M,mosaicSize:$,isPartiallyFilled:k}}_fetchRawTile(i,e,s,t){const n=this.rasterInfo.storageInfo.blockBoundary[i];if(!n)return Promise.resolve(null);const{minRow:a,minCol:r,maxCol:o,maxRow:l}=n;if(e<a||s<r||e>l||s>o)return Promise.resolve(null);const c=rt(this.rasterId,t.sliceId),u=`${i}/${e}/${s}`;let h=at(c,t.registryId,u);if(h==null){const f=new AbortController;h=this.fetchRawTile(i,e,s,{...t,signal:f.signal}),ot(c,t.registryId,u,h,f),h.catch(()=>Xi(c,t.registryId,u))}return t.signal&&Tt(t,()=>{Yi(c,t.registryId,u)}),h}_computeMagDirValues(i){const{bandCount:e,dataType:s}=this.rasterInfo;if(!(e===2&&s==="vector-magdir"||s==="vector-uv")||i?.length!==2||!i[0]?.length)return null;const t=i[0].length;if(s==="vector-magdir"){const l=i[1].map(c=>(c+360)%360);return[i[0],l]}const[n,a]=i,r=[],o=[];for(let l=0;l<t;l++){const[c,u]=gi([n[l],a[l]]);r.push(c),o.push(u)}return[r,o]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=Ji(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,s,t={}){const n={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(n.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,n));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:r,srcHeight:o,pyramidLevel:l}=n,c=r/e,u=o/s,h=l<a&&c*u>=16,f=l===a&&this._requireTooManySrcTiles(r,o,e,s);if(h||f||r===0||o===0){const d=new A({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/s,spatialReference:i.spatialReference});let y=Ai(d,this.rasterInfo.spatialReference,i,n.datumTransformation);const g=!y||t.srcResolution&&y.x+y.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&g){const m=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-l+3>=m){const p=2**m;y={x:t.srcResolution.x*p,y:t.srcResolution.y*p}}}y&&(n.srcResolution=y,this._updateSourceDataInfo(i,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,e,s)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(i,e,s,t){const{tileInfo:n}=this.rasterInfo.storageInfo,a=Math.ceil(i/n.size[0])*Math.ceil(e/n.size[1]),r=i/s,o=e/t,l=Math.max(1,(s+t)/1024);return a>=Ki*l||r>lt||o>lt}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:s}=this,t=s.spatialReference,{srcResolution:n,datumTransformation:a}=e,{pyramidLevel:r,pyramidResolution:o,excessiveReading:l}=nt(n,s,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||be(i,t,a);if(c==null)return;const u=s.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:f}=s.storageInfo.origin,d=Math.floor((c.xmin-h)/o.x+.1),y=Math.floor((f-c.ymax)/o.y+.1),g=Math.floor((c.xmax-h)/o.x-.1),m=Math.floor((f-c.ymin)/o.y-.1),p=c.width<.1*o.x?0:g-d+1,x=c.height<.1*o.y?0:m-y+1;e.pyramidLevel=r,e.pyramidResolution=o,e.srcWidth=p,e.srcHeight=x,e.ul={x:d,y}}_getRequestOptionsWithSliceId(i){return this.rasterInfo.multidimensionalInfo!=null&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:s,position:t,pyramidLevel:n,useTransposedTile:a}=e,r=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:s,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!a){const m=i.pixels.map(I=>I[t]),p={location:s,value:m,pyramidLevel:n},x=this._computeMagDirValues(m.map(I=>[I]));return x?.length&&(p.magdirValue=x.map(I=>I[0])),p}let l=i.pixels.map(m=>m.slice(t*r,t*r+r)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Kt(o,h.transposedVariableName);if(u){const m=Qt(f,h.multidimensionalDefinition,h.timeExtent);l=l.map(p=>m.map(x=>p[x])),c=c?.map(p=>m.map(x=>p[x])),f=m.map(p=>f[p])}const d=i.noDataValues||this.rasterInfo.noDataValue,y={pixels:l,pixelType:i.pixelType};let g;return d!=null&&(xi(y,d),g=y.mask),{location:s,value:null,dataSeries:f.map((m,p)=>{const x={value:g?.[p]===0?null:l.map(I=>I[p]),multidimensionalDefinition:m.multidimensionalDefinition.map(I=>new He({...I,isSlice:!0}))};return c?.length&&(x.magdirValue=[c[0][p],c[1][p]]),x}),pyramidLevel:n}}};function Zi(i,e,s){return Math.abs(i.x-e.x)<s&&Math.abs(i.y-e.y)<s}b([R()],J.prototype,"_rasterTileAlignmentInfo",void 0),b([R()],J.prototype,"_tileFetchQueue",void 0),b([R({readOnly:!0})],J.prototype,"_isGlobalWrappableSource",null),b([R({readOnly:!0})],J.prototype,"_hasNoneOrGCSShiftTransform",null),b([R()],J.prototype,"rasterJobHandler",null),b([R({readOnly:!0})],J.prototype,"rasterId",null),b([R(pt)],J.prototype,"url",null),b([R({type:String,json:{write:!0}})],J.prototype,"datasetName",void 0),b([R({type:String,json:{write:!0}})],J.prototype,"datasetFormat",void 0),b([R()],J.prototype,"hasUniqueSourceStorageInfo",void 0),b([R()],J.prototype,"rasterInfo",void 0),b([R()],J.prototype,"ioConfig",void 0),b([R()],J.prototype,"sourceJSON",void 0),J=b([K("esri.layers.support.rasterDatasets.BaseRaster")],J);const le=J;function es(i,e){if(i.spatialReference.equals(e))return i;const s=Xe(i.spatialReference),t=Xe(e);if(s===t)return i;const n=s/t;return{x:i.x*n,y:i.y*n}}async function Je(i,e,s){if(s.type==="extent")return is(i,e,s);const{width:t,height:n}=i,a=new Uint8Array(t*n),{contains:r,intersects:o}=await ze(()=>import("./geometryEngine-e72ad282.js"),["./geometryEngine-e72ad282.js","./geometryEngineBase-71eefacf.js","./index-cc5260cc.js","./index-e15ba190.css","./hydrated-ad38afaf.js"],import.meta.url);return o(e,s)?s.type==="polyline"?ss(i,e,s):r(s,e)?i:ts(i,e,s):new q({pixelType:i.pixelType,width:t,height:n,mask:a,maskIsAlpha:!1,pixels:[...i.pixels]})}function ts(i,e,s){if(!i)return i;const{width:t,height:n}=i,a=e.width/t,r=e.height/n,{xmin:o,ymax:l}=e;let c;if(s.type==="extent"){const m=(s.xmin-o)/a,p=(s.xmax-o)/a,x=(l-s.ymax)/r,I=(l-s.ymin)/r;c=[[[m,x],[m,I],[p,I],[p,x],[m,x]]]}else c=s.rings.map(m=>m.map(([p,x])=>[(p-o)/a,(l-x)/r]));const u=document.createElement("canvas");u.width=t,u.height=n;const h=u.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach(m=>{h.moveTo(m[0][0],m[0][1]);for(let p=0;p<m.length;p++)h.lineTo(m[p][0],m[p][1]);h.closePath()}),h.fill();const f=h.getImageData(0,0,t,n).data,d=i.mask,y=t*n,g=new Uint8Array(y);for(let m=0;m<y;m++)d&&!d[m]||(g[m]=f[4*m+3]>127?255:0);return new q({pixelType:i.pixelType,width:t,height:n,mask:g,maskIsAlpha:!1,pixels:[...i.pixels]})}function is(i,e,s){const{width:t,height:n}=i,a=new Uint8Array(t*n),r=e.width/t,o=e.height/n;if(s.width/r<.5||s.height/o<.5)return new q({pixelType:i.pixelType,width:t,height:n,mask:a,pixels:[...i.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:h}=e,{xmin:f,xmax:d,ymin:y,ymax:g}=s,m=Math.max(l,f),p=Math.min(c,d),x=Math.max(u,y),I=Math.min(h,g),w=.5*r,T=.5*o;if(p-m<w||I-x<T||p<l+w||m>c-w||x>h-T||I<u+T)return new q({pixelType:i.pixelType,width:t,height:n,mask:a,pixels:[...i.pixels]});const v=Math.max(0,(m-l)/r),S=Math.min(t,Math.max(0,(p-l)/r)),F=Math.max(0,(h-I)/o),_=Math.min(n,Math.max(0,(h-x)/o)),C=Math.round(v),k=Math.round(S)-1,P=Math.round(F),M=Math.round(_)-1;if(C===k&&v%1>.5&&S%1<.5||P===M&&F%1>.5&&_%1<.5)return new q({pixelType:i.pixelType,width:t,height:n,mask:a,pixels:[...i.pixels]});if(C===0&&P===0&&k===t&&M===n)return i;const $=i.mask;for(let B=P;B<=M;B++)for(let D=C;D<=k;D++){const E=B*t+D;a[E]=$?$[E]:255}return new q({pixelType:i.pixelType,width:t,height:n,mask:a,pixels:[...i.pixels]})}function ss(i,e,s){const{width:t,height:n}=i,a=new Uint8Array(t*n),r=e.width/t,o=e.height/n,{xmin:l,ymax:c}=e,{paths:u}=s,h=i.mask;for(let f=0;f<u.length;f++){const d=u[f];for(let y=0;y<d.length-1;y++){const[g,m]=d[y],[p,x]=d[y+1];let I=Math.floor((c-m)/o),w=Math.floor((c-x)/o);if(w<I){const v=I;I=w,w=v}I=Math.max(0,I),w=Math.min(n-1,w);const T=(p-g)/(x-m);for(let v=I;v<=w;v++){const S=v===I?Math.max(m,x):(n+1-v)*o,F=v===w?Math.min(m,x):S-o;let _=Math.floor(x===m?(g-l)/r:(T*(S-m)+g-l)/r),C=Math.floor(x===m?(p-l)/r:(T*(F-m)+g-l)/r);if(C<_){const P=_;_=C,C=P}const k=v*t;_=Math.max(0,_),C=Math.min(t-1,C);for(let P=k+_;P<=k+C;P++)a[P]=h?h[P]:255}}}return new q({pixelType:i.pixelType,width:t,height:n,mask:a,pixels:[...i.pixels]})}function ns(i,e,s,t=!0){const{spatialReference:n}=i,{x:a,y:r}=es(s,n);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:f,ymax:d,ymin:y}=u;const{xmin:g,ymax:m}=i.extent;return t?(h=g+(h>g?a*Math.round((h-g)/a):0),d=m-(d<m?r*Math.round((m-d)/r):0),f=g+(f>g?a*Math.round((f-g)/a):0),y=m-(y<m?r*Math.round((m-y)/r):0),o=new L({xmin:h,ymax:d,xmax:f,ymin:y,spatialReference:n}),l=Math.round(o.width/a),c=Math.round(o.height/r)):(l=Math.floor((f-h)/a+.8),c=Math.floor((d-y)/r+.8),h=g+(h>g?a*Math.floor((h-g)/a+.1):0),d=m-(d<m?r*Math.floor((m-d)/r+.1):0),f=h+l*a,y=d-c*r,o=new L({xmin:h,ymax:d,xmax:f,ymin:y,spatialReference:n})),{extent:o,width:l,height:c}}const rs=40;let ne=class extends le{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(e){await this.init();const{rasterFunction:s}=this;this.primaryRasters?.rasters?.length?s.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=s.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(u=>u.rasterJobHandler=this.rasterJobHandler));const{rasters:t,rasterIds:n}=this.primaryRasters,a=t.map(u=>u.rasterInfo?void 0:u.open(e));await Promise.all(a);const r=t.map(({rasterInfo:u})=>u),o=s.bind({rasterInfos:r,rasterIds:n});if(s.rawSourceRasterInfos=r,!o.success||r.length===0)throw new O("raster-function:open",`cannot bind the function: ${o.error??""}`);const l=s.functionName==="Table"?s:s.functionArguments?.raster;l?.functionName==="Table"&&(s.rasterInfo.attributeTable=je.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=r[0];this.hasUniqueSourceStorageInfo=r.length===1||r.slice(1).every(u=>as(u,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",s.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,s,t,n={}){const{rasters:a,rasterIds:r}=this.primaryRasters;let o=!1;const{interpolation:l}=n,c=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!n.requestRawData&&c&&(o=a.length===1&&!n.skipRasterFunction,n={...n,interpolation:"bilinear",requestRawData:o});const u=a.map(w=>w.fetchPixels(e,s,t,n)),h=await Promise.all(u),f=h.map(w=>w.pixelBlock),d=o||n.requestRawData?h.map(w=>w.srcTilePixelSize):null;if(n.skipRasterFunction||f.every(w=>w==null))return h[0];const y=h.find(w=>w.pixelBlock!=null)?.extent??e;let g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:y,primaryPixelBlocks:f,primaryPixelSizes:d,primaryRasterIds:r}):this.rasterFunction.process({extent:y,primaryPixelBlocks:f,primaryPixelSizes:d,primaryRasterIds:r});const{transformGrid:m}=h[0];if(!o||g==null||m==null){const w=n.noClip?null:this.getClippingGeometry(y.spatialReference);return n.noClip||n.requestRawData||g==null||!w||(g=await Je(g,y,w)),{...h[0],pixelBlock:g}}const p={rows:m.spacing[0],cols:m.spacing[1]};let x;this.rasterJobHandler?x=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:s,height:t},coefs:m.coefficients,sampleSpacing:p,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},n)).pixelBlock:x=yt(g,{width:s,height:t},m.coefficients,p,l);const I=n.noClip?null:this.getClippingGeometry(e.spatialReference);return n.noClip||n.requestRawData||x==null||I==null||(x=await Je(x,e,I)),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:x}}getClippingGeometry(e){const s=this._clippingGeometry.get("0");if(!e||!s)return s;const t=os(e);let n=this._clippingGeometry.get(t);return n!=null||(n=e.equals(s.spatialReference)?s:Ee(s,e),this._clippingGeometry.set(t,n)),n}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let s=e?.clippingGeometry;if(s&&e.clippingType==="inside"){const{extent:t}=this.rasterInfo,{difference:n,densify:a}=await ze(()=>import("./geometryEngine-e72ad282.js"),["./geometryEngine-e72ad282.js","./geometryEngineBase-71eefacf.js","./index-cc5260cc.js","./index-e15ba190.css","./hydrated-ad38afaf.js"],import.meta.url);let r=a(kt.fromExtent(t),2*(t.width+t.height)/rs);r=Ee(r,s.spatialReference),s=n(r,s)}this._clippingGeometry.clear(),s&&this._clippingGeometry.set("0",s)}};b([R({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),b([R()],ne.prototype,"tileType",void 0),b([R()],ne.prototype,"rasterFunction",void 0),b([R()],ne.prototype,"primaryRasters",void 0),ne=b([K("esri.layers.support.rasterDatasets.FunctionRaster")],ne);const xt=ne;function as(i,e){const{storageInfo:s,pixelSize:t,spatialReference:n,extent:a}=i,{storageInfo:r,pixelSize:o,spatialReference:l,extent:c}=e;return t.x===o.x&&t.y===o.y&&n.equals(l)&&a.equals(c)&&s.blockHeight===r.blockHeight&&s.blockWidth===r.blockWidth&&s.maximumPyramidLevel===r.maximumPyramidLevel}function os(i){return String(i.wkid??i.wkt??i.wkt2)}const ls=i=>{let e=class extends i{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=t[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){t?.functionName?.toLowerCase()==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}get rasterInfo(){return Ct(oe.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(t){this._set("url",ut(t,oe.getLogger(this)))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,n,a){const r=n?.layerDefinition?.drawingInfo?.renderer;return ii(r,a)||void 0}async convertVectorFieldData(t,n){const{serviceRasterInfo:a}=this;if(t==null||!a)return null;const r=this._rasterJobHandler.instance,o=a.dataType;return r?r.convertVectorFieldData({pixelBlock:t,dataType:o},n):wi(t,o)}async computeStatisticsHistograms(t,n){await this.load(n),t=Le(si,t).clone();const{serviceRasterInfo:a}=this;if(a==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:r}=t;if(r==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=r;const{spatialReference:l}=a;r.spatialReference.equals(l)||(await Ne(),o=r.type==="extent"?be(r,l):Ee(r,l));const c=t.pixelSize??new A({x:a.pixelSize.x,y:a.pixelSize.y,spatialReference:l}),{extent:u,width:h,height:f}=ns(a,o,c),d=await this.fetchPixels(u,h,f,{...n,interpolation:"nearest"});if(d.pixelBlock==null)throw new O("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const y=await Je(d.pixelBlock,u,o),g=this._rasterJobHandler.instance;return g?g.computeStatisticsHistograms({pixelBlock:y},n):We(y)}async createFlowMesh(t,n){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(t,n):Ii(t.meshType,t.simulationSettings,t.flowData,n.signal!=null?n.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:n}=this.serviceRasterInfo??{};if(n==null)return t;let a=t.multidimensionalDefinition||this.multidimensionalDefinition;a?.length||(a=Ke(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const r=t.timeExtent||this.timeExtent;if(a!=null&&r!=null&&(r.start!=null||r.end!=null)){a=a.map(g=>g.clone());const o=n.variables.find(({name:g})=>g===a[0].variableName)?.dimensions?.find(({name:g})=>g==="StdTime"),l=a.find(({dimensionName:g})=>g==="StdTime");if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:u}=r,h=c==null?null:c.getTime(),f=u==null?null:u.getTime(),d=h??f,y=f??h;if(o.values!=null){const g=o.values.filter(m=>{if(Array.isArray(m)){if(d===y)return m[0]<=d&&m[1]>=d;const p=m[0]<=d&&m[1]>d||m[0]<y&&m[1]>=y,x=m[0]>=d&&m[1]<=y||m[0]<d&&m[1]>y;return p||x}return d===y?m===d:m>=d&&m<=y});if(g.length){const m=g.sort((p,x)=>{const I=Array.isArray(p)?p[0]:p,w=Array.isArray(p)?p[1]:p,T=Array.isArray(x)?x[0]:x,v=Array.isArray(x)?x[1]:x;return d===y?I-T:Math.abs(w-y)-Math.abs(v-y)})[0];l.values=[m]}else a=null}else if(o.hasRegularIntervals&&o.extent){const[g,m]=o.extent;d>m||y<g?a=null:l.values=d===y?[d]:[Math.max(g,d),Math.min(m,y)]}}return a!=null&&ni(a,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:a}}async updateRasterFunction(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const u=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&u&&this._set("rasterFunction",De.fromJSON(u)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,n=this.raster,a=!1;n.datasetFormat==="Function"?(t=n.primaryRasters.rasters,n=t[0],a=!0):t=[n];const{rasterFunction:r}=this;if(r){const u={raster:n};t.length>1&&t.forEach(d=>u[d.url]=d);const h=gt(r.functionDefinition?.toJSON()??r.toJSON(),u),f=new xt({rasterFunction:h});f.rasterJobHandler=this._rasterJobHandler.instance,await f.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=f}else this.raster=n,this._cachedRasterFunctionJson=null,await n.when();if(this._cachedRendererJson=null,!a&&!r)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o?.length?o.some(u=>u>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:n}=this;if(!t||!n||!this.renderer)return;const{rasterInfo:a}=this.raster,r=Qe(a,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=r?.name,l=Ze({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(n.rasterInfo=et(a,o),n.rendererJSON=l,n.bind(),await c.updateSymbolizer(n),this._cachedRendererJson=l)}async applyRenderer(t,n){const a=t?.pixelBlock;if(!(a!=null&&a.pixels&&a.pixels.length>0))return null;let r;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return r=o?await o.symbolize({...t,simpleStretchParams:n,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:n,bandIds:l}),r}getTileUrl(t,n,a){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${n}/${a}`:""}getCompatibleTileInfo(t,n,a=!1){if(!this.loaded||n==null)return null;if(a&&t.equals(this.spatialReference))return this.tileInfo;const r=Mt(t);return te.create({size:256,spatialReference:t,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:n.xmin,y:n.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,n,a,r={}){if(s(this),r.requestAsImageElement){const l=this.getTileUrl(t,n,a);return ht(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:r.signal}).then(c=>c.data)}const{serviceRasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null){const l=r.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,n,a,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(r={...r,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,n,a,r)}async fetchPixels(t,n,a,r={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),n=Math.round(n),a=Math.round(a),this.raster.fetchPixels(t,n,a,r))}async identify(t,n={}){await this.load();const{raster:a,serviceRasterInfo:r}=this;if(r?.multidimensionalInfo!=null&&!(r.hasMultidimensionalTranspose&&(mt(n.multidimensionalDefinition)||n.transposedVariableName||n.timeExtent))&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null)return{location:t,value:null};const o=this.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(t))throw new O("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return a.identify(t,n)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.serviceRasterInfo?.multidimensionalInfo;if(t==null||this.serviceRasterInfo?.dataType!=="standard-time")return!1;const n=this.multidimensionalDefinition,a=n?.[0]?.variableName;return t.variables.some(r=>r.name===a&&(!n?.[0].dimensionName||r.dimensions.some(o=>o.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const n=t??this.serviceRasterInfo?.multidimensionalInfo;return ri(this.multidimensionalSubset,n)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ke(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new ci;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{s(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){s(this);const{raster:t}=this,n=ai(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){s(this);const{rasterInfo:n}=this.raster;!this.bandIds&&n.bandCount>1&&(this.bandIds=oi(n));const a=Qe(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=a?.name,o=li(this.raster);if(!this.renderer||t==="override"){const h=tt(n,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:o}),f=n.statistics,d=f&&f.length>0?f[0]:null,y=d?.max??0,g=d?.min??0;this.raster.datasetFormat==="WCSServer"&&h.type==="raster-stretch"&&(y>1e24||g<-1e24)&&(h.dynamicRangeAdjustment=!0,h.statistics=null,h.stretchType==="none"&&(h.stretchType="min-max")),this.renderer=h}const l=Ze({...this.renderer.toJSON(),variableName:r}),c=et(n,r);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new bi({rendererJSON:l,rasterInfo:c});const u=this.symbolizer.bind();if(u.success){if(t==="auto"){const{colormap:h}=this.raster.rasterInfo,f=this.renderer;if(h!=null&&f.type==="raster-colormap"){const d=tt(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){const d=this.bandIds?.length,y=f.statistics?.length;!f.dynamicRangeAdjustment&&y&&d&&y!==d&&this._configDefaultRenderer("override")}}}else oe.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function s(t){if(!t.raster||!t.serviceRasterInfo)throw new O("imagery-tile","no raster")}return b([R({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),b([R({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),b([R({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),b([R({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),b([R({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),b([R()],e.prototype,"bandIds",void 0),b([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),b([R({json:{read:!1}})],e.prototype,"fullExtent",null),b([R()],e.prototype,"interpolation",void 0),b([R()],e.prototype,"ioConfig",void 0),b([R({type:[He],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),b([R({type:Zt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),b([R()],e.prototype,"raster",void 0),b([R({type:De,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),b([R({readOnly:!0})],e.prototype,"rasterInfo",null),b([R()],e.prototype,"serviceRasterInfo",void 0),b([R()],e.prototype,"sourceJSON",void 0),b([R({readOnly:!0,type:z,json:{read:!1}})],e.prototype,"spatialReference",void 0),b([R({type:te})],e.prototype,"tileInfo",void 0),b([R(pt)],e.prototype,"url",null),b([R({types:ei,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const t=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:ti,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),b([Ft("renderer")],e.prototype,"readRenderer",null),b([R({clonable:!1})],e.prototype,"symbolizer",void 0),e=b([K("esri.layers.mixins.ImageryTileMixin")],e),e};function wt(i){return["x","e","east","long","longitude"].includes(i.toLowerCase())}function It(i){return["y","n","west","lat","latitude"].includes(i.toLowerCase())}function cs(i){const{axes:e}=i.domain,s=Object.keys(e),t=[],n=[];let a=-1,r=-1,o=[];for(let x=0;x<s.length;x++){const I=s[x];wt(I)?a=x:It(I)&&(r=x);const w=e[I],T=[];if("values"in w){w.values.forEach(S=>T.push(typeof S=="string"?new Date(S).getTime():S));const v=T[1]-T[0];t.push([T[0]-.5*v,T[T.length-1]+.5*v]),n.push(v)}else{const{start:v,stop:S,num:F}=w,_=(S-v)/(F-1);t.push([v-.5*_,S+.5*_]),n.push(_);for(let C=0;C<F;C++)T.push(v+_*C)}o.push({name:I,values:T,extent:[T[0],T[T.length-1]]})}a>-1&&r===-1?r=a===0?1:0:r>-1&&a===-1?a=r===0?1:0:r===-1&&a===-1&&(a=0,r=1),o=o.filter((x,I)=>!(I===a||I===r));const{referencing:l}=i.domain,c=l.find(x=>x.coordinates.includes(s[a])).system.id,u=c?.slice(c.lastIndexOf("/")+1),h=u==null||u==="CRS84"?4326:Number(u),f=new z({wkid:h}),[d,y]=t[a],[g,m]=t[r],p=new L({xmin:d,xmax:y,ymin:g,ymax:m,spatialReference:f});return{width:Math.round(p.width/n[a]),height:Math.round(p.height/n[r]),extent:p,dimensions:o}}function Ce(i){const e=Pt();return e?i[e]??Object.values(i)[0]:Object.values(i)[0]}function Me(){return Math.round(255*Math.random())}function us(i){const e={},{parameters:s}=i;if(!s)return e;for(const[t,n]of Object.entries(s)){const{type:a,description:r,unit:o,categoryEncoding:l,observedProperty:c}=n;if(a==="Parameter"&&(e[t]={},r&&(e[t].description=Ce(r)),o&&(e[t].unit=o.label?Ce(o.label):null,e[t].symbol=o.symbol?.value),l)){const u=Object.entries(l).map((d,y)=>({OID:y,Value:Number(d[1]),ClassName:d[0].slice(d[0].lastIndexOf("/")+1),Count:1}));let h=!1;c?.categories?.length&&(c.categories.forEach(d=>{if(!d.id)return;const y=d.id.slice(d.id.lastIndexOf("/")+1),g=u.find(p=>p.ClassName===y);if(!g)return;const m=d.label?Ce(d.label):null;if(g.Label=m,d.preferredColor){const p=Ot.fromHex(d.preferredColor);p&&(h=!0,g.Red=p.r,g.Green=p.g,g.Blue=p.b)}}),h&&u.forEach(d=>{d.Red==null&&(d.Red=Me(),d.Green=Me(),d.Blue=Me())}));const f={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:u.map(d=>({attributes:d}))};h&&f.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[t].attributeTable=f}}return e}function hs(i){let e=Number.MAX_VALUE,s=-Number.MAX_VALUE;for(let t=0;t<i.length;t++){const n=i[t];n!=null&&(n<e&&(e=n),n>s&&(s=n))}return Ri(e,s)}function fs(i,e,s){const t=i.map((l,c)=>({name:l,count:e[c]})).sort((l,c)=>l.name>c.name?-1:1),n=(a=1,l=>a*=l.count);var a;const r=[...t.slice(1),{name:"",count:1}].reverse().map(n).reverse();let o=0;for(let l=i.length-1;l>=0;l--)o+=r[t.findIndex(({name:c})=>c===i[l])]*(s%e[l]),s=Math.floor(s/e[l]);return o}function ms(i){const{width:e,height:s,extent:t,dimensions:n}=cs(i),{ranges:a}=i,r=Object.keys(a).sort((f,d)=>f<d?-1:1),o=[];for(let f=0;f<r.length;f++){const d=r[f];n?.length&&o.push({name:d,dimensions:n})}const l=us(i);o.forEach(f=>l[f.name]&&Object.assign(f,l[f.name]));const c=o.length?{variables:o}:void 0,u=[];for(let f=0;f<r.length;f++){const d=r[f],{values:y,dataType:g,axisNames:m,shape:p}=a[d],x=p.length>2?f*p.slice(0,-2).reduce((F,_)=>F*_):0,I=m.slice(0,-2),w=p.slice(0,-2),T=g==="float"?"f32":hs(y),v=e*s,S=y.length/v;for(let F=0;F<S;F++){const _=q.createEmptyBand(T,v),C=new Uint8Array(v).fill(255);let k=!1;const P=F*v;for(let M=0;M<v;M++){const $=y[P+M];$==null?(C[M]=0,k=!0):_[M]=$}if(f===0||n?.length){const M=new q({width:e,height:s,mask:k?C:null,pixels:[_],pixelType:T});M.updateStatistics(),n?.length?u[fs(I,w,F)+x]=M:u.push(M)}else{const M=u[F];M.pixels.push(_),k?M.mask&&(M.mask=q.combineBandMasks([M.mask,C])):M.mask=k?C:null}}}const h=Object.values(l).find(f=>f.attributeTable)?.attributeTable;return{extent:t,pixelBlocks:u,multidimensionalInfo:c,attributeTable:h,bandNames:c?void 0:r}}let ce=class extends le{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(i){await this.init();const e=this.source,{pixelBlocks:s,attributeTable:t,statistics:n,histograms:a,name:r,nativeExtent:o,transform:l}=e,c=s[0],{width:u,height:h,pixelType:f}=c,d=e.extent??new L({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new z({wkid:3857})}),y=e.isPseudoSpatialReference??!e.extent,g={x:d.width/u,y:d.height/h},m={...e.keyProperties};t&&(m.DataType="Thematic");const p=new Se({width:u,height:h,pixelType:f,extent:d,nativeExtent:o,attributeTable:t,transform:l,pixelSize:g,spatialReference:d.spatialReference,bandCount:c.pixels.length,keyProperties:m,multidimensionalInfo:e.multidimensionalInfo,statistics:n,isPseudoSpatialReference:y,histograms:a});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(p),this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),p.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,p.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},i),p.multidimensionalInfo||(this.source=null),this.datasetName=r}fetchRawTile(i,e,s,t={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[r,o]=a.storageInfo.tileInfo.size,{sliceId:l}=t,{pixelBlocks:c}=this.source,u={pixelBlock:l==null?c[0]:c[l],useBilinear:a.dataType!=="thematic",tileSize:{width:r,height:o},level:i,row:e,col:s},h=this.rasterJobHandler?this.rasterJobHandler.clipTile(u,t):vi(u);return Promise.resolve(h)}const n=this._pixelBlockTiles.get(`${i}/${e}/${s}`);return Promise.resolve(n)}async _buildInMemoryRaster(i,e,s){const{rasterInfo:t}=this,n=t.storageInfo.maximumPyramidLevel??0,a=t.dataType!=="thematic",r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:i,tileSize:e,maximumPyramidLevel:n,useBilinear:a},s):Promise.resolve(Si(i,e,n,a)),o=t.statistics!=null,l=t.histograms!=null,c=this.ioConfig.skipStatistics||o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},s):Promise.resolve(Ti(i)),u=await ft([r,c]);if(!u[0].value&&u[1].value)throw new O("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=u[0].value,o||(t.statistics=u[1].value?.statistics),l||(t.histograms=u[1].value?.histograms)}async _buildMDimStats(i,e,s){for(let t=0;t<e.variables.length;t++){const n=e.variables[t];if(n.statistics)continue;const a=n.dimensions.map(c=>new He({variableName:n.name,dimensionName:c.name,values:[c.values?.[0]??c.extent?.[0]],isSlice:!0})),r=dt(a,e),o=r==null?null:i[r];if(o==null)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},s):We(o);n.statistics=l.statistics,n.histograms||(n.histograms=l.histograms)}}};b([R({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),b([R()],ce.prototype,"source",void 0),b([R()],ce.prototype,"url",null),ce=b([K("esri.layers.support.rasterDatasets.InMemoryRaster")],ce);const qe=ce;let me=class extends le{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();const{extent:s,pixelBlocks:t,multidimensionalInfo:n,attributeTable:a,bandNames:r}=await this._fetchData(e),{statistics:o,histograms:l}=We(t[0]),c=r?.map(d=>({BandName:d})),u={DataType:a?"Thematic":n?"Scientific":"Generic",BandProperties:c},h=new qe({source:{extent:s,pixelBlocks:t,attributeTable:a?je.fromJSON(a):null,multidimensionalInfo:n,statistics:o,histograms:l,keyProperties:u,isPseudoSpatialReference:!1}});await h.open(),this._inMemoryRaster=h;const f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",h.rasterInfo)}fetchRawTile(e,s,t,n={}){return this._inMemoryRaster.fetchRawTile(e,s,t,n)}async _fetchData(e){const s=this.source??(await this.request(this.url,{signal:e?.signal})).data,t="imagery-tile-layer:open-coverage-json";if(s.type?.toLowerCase()!=="coverage"||s.domain?.domainType?.toLowerCase()!=="grid")throw new O(t,"Only coverage with Grid domain type is supported");if(!s.ranges)throw new O(t,"Missing ranges in the grid coverage data");if(!s.domain.referencing?.length)throw new O(t,"Missing domain referencing in the grid coverage data");const n=Object.values(s.ranges);for(let a=0;a<n.length;a++){const{axisNames:r,shape:o,type:l,values:c}=n[a];if(!(l.toLowerCase()==="ndarray"&&c?.length&&r?.length&&o?.length))throw new O(t,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(wt(r[r.length-1])&&It(r[r.length-2])))throw new O(t,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return ms(s)}};b([R({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),b([R({constructOnly:!0})],me.prototype,"source",void 0),me=b([K("esri.layers.support.rasterDatasets.CovJSONRaster")],me);const ds=me;function fe(i,e){if(!i||!e)return[];let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const a=fe(i,s);for(let r=0;r<a.length;r++)fe(a[r],e).forEach(o=>t.push(o));return t}const n=i.getElementsByTagNameNS("*",s);if(!n||n.length===0)return[];for(let a=0;a<n.length;a++)t.push(n[a]||n.item(a));return t}function j(i,e){if(!i||!e)return null;let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=fe(i,s);return t.length>0?e?j(t[0],e):t[0]:null}function X(i,e=null){const s=e?j(i,e):i;let t;return s?(t=s.textContent||s.nodeValue,t?t.trim():null):null}function ps(i,e){const s=fe(i,e),t=[];let n;for(let a=0;a<s.length;a++)n=s[a].textContent||s[a].nodeValue,n&&(n=n.trim(),n!==""&&t.push(n));return t}function we(i,e){return ps(i,e).map(s=>Number(s))}function ae(i,e){const s=X(i,e);return Number(s)}function Oe(i,e){const s=i?.nodeName?.toLowerCase(),t=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===t}function ct(i,e){if(!i||!e)return null;const s=[];for(let t=0;t<i.length;t++)s.push(i[t]),s.push(e[t]);return s}function ys(i){const e=j(i,"GeodataXform"),s=_e(ae(e,"SpatialReference/WKID")||X(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const t=ae(e,"PolynomialOrder")??1,n=we(e,"CoeffX/Double"),a=we(e,"CoeffY/Double"),r=we(e,"InverseCoeffX/Double"),o=we(e,"InverseCoeffY/Double"),l=ct(n,a),c=ct(r,o);return{spatialReference:s,transform:l&&c&&l.length&&c.length?new Ue({spatialReference:s,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function gs(i){const e=ae(i,"NoDataValue"),s=j(i,"Histograms/HistItem"),t=ae(s,"HistMin"),n=ae(s,"HistMax"),a=ae(s,"BucketCount"),r=X(s,"HistCounts")?.split("|").map(f=>Number(f));let o,l,c,u;fe(i,"Metadata/MDI").forEach(f=>{const d=Number(f.textContent??f.nodeValue);switch(f.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=d;break;case"STATISTICS_MAXIMUM":l=d;break;case"STATISTICS_MEAN":c=d;break;case"STATISTICS_STDDEV":u=d}});const h=ae(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:r?.length&&t!=null&&n!=null?{min:t,max:n,size:a||r.length,counts:r}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function _e(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new z({wkid:e});if(i=String(i).trim(),$t(i))return new z({wkt2:i});const s=i.toUpperCase();if(s.startsWith("COMPD_CS")){if(!s.includes("VERTCS")||!s.includes("GEOGCS")&&!s.startsWith("PROJCS"))return null;const t=s.indexOf("VERTCS"),n=s.indexOf("PROJCS"),a=n>-1?n:s.indexOf("GEOGCS");if(a===-1)return null;const r=i.slice(a,i.lastIndexOf("]",t)+1).trim(),o=i.slice(t,i.lastIndexOf("]")).trim();e=Pe(r);const l=new z(e?{wkid:e}:{wkt:r}),c=Pe(o);return c&&(l.vcsWkid=c),l}return s.startsWith("GEOGCS")||s.startsWith("PROJCS")?(e=Pe(i),new z(e!==0?{wkid:e}:{wkt:i})):null}function Pe(i){const e=i.replaceAll("]","[").replaceAll('"',"").split("[").map(n=>n.trim()).filter(n=>n!==""),s=e[e.length-1].split(","),t=s[0]?.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const n=Number(s[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Ve(i){if(i?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(t=>{if(t.nodeType===1){if(Oe(t,"SRS")){if(!e.spatialReference){const n=X(t);e.spatialReference=_e(n)}}else if(Oe(t,"Metadata"))if(t.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=ys(t);e.transform=a,e.spatialReference||(e.spatialReference=n)}else fe(t,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=X(n));else if(Oe(t,"PAMRasterBand")){const n=gs(t);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const s=e.rasterBands;if(s.length){const t=!!s[0].statistics;e.statistics=t?s.map(a=>a.statistics).filter(Be):null;const n=!!s[0].histogram;e.histograms=n?s.map(a=>a.histogram).filter(Be):null}return e}let Re=class extends le{async open(i){await this.init();const e=await this._fetchData(i);let{spatialReference:s,statistics:t,histograms:n,transform:a}=await this._fetchAuxiliaryData(i);const r=!s;r&&(s=new z({wkid:3857})),n?.length&&t==null&&(t=Ge(n));const{width:o,height:l}=e;let c=new L({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:s});const u=a?a.forwardTransform(c):c;let h=!0;if(a){const d=a.forwardCoefficients;h=d&&d[1]===0&&d[2]===0,h&&(a=null,c=u)}const f=new qe({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[e],statistics:t,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:r},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(i,e,s,t={}){return this._inMemoryRaster.fetchRawTile(i,e,s,t)}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i?.signal}),s=_i(e).toUpperCase();if(s!=="JPG"&&s!=="PNG"&&s!=="GIF"&&s!=="BMP")throw new O("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const t=s.toLowerCase(),n=t==="gif"||t==="bmp"||!Bt("ios"),a=await this.decodePixelBlock(e,{format:t,useCanvas:n,hasNoZlibMask:!0});if(a==null)throw new O("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(i){const e=i?.signal,{skipExtensions:s=[],skipMapInfo:t}=this.ioConfig,n=t||s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),a=this.datasetFormat,r=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,o=r&&s.includes(r)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+r,{responseType:"text",signal:e}),l=await ft([n,o]);if(e?.aborted)throw Dt();const c=Ve(l[0].value?.data);if(!c.transform){const u=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(h=>Number(h)):null;c.transform=u?.length===6?new Ue({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return c}};b([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=b([K("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const Ie=Re;let de=class extends le{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(i){await this.init();const e=i?.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=s.data;if(this.sourceJSON=t,!t)throw new O("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new O("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(n.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=t.name?.slice(t.name.indexOf("/")+1)??"";const a=await this._fetchRasterInfo({signal:e});if(a==null)throw new O("image-server-raster:open","cannot initialize image service");ui(a,t);const r=this.tileType==="Map"?xs(t.tileInfo,t):te.fromJSON(t.tileInfo);Nt(r);const[o,l]=this._computeMinMaxLOD(a,r),{extent:c,pixelSize:u}=a,h=.5/a.width*u.x,f=Math.max(u.x,u.y),{lods:d}=r;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>h||!d.some(S=>Math.abs(S.resolution-f)<h))&&(u.x=u.y=o.resolution,a.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),a.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const y=o.level-l.level,[g,m]=r.size,p=[],x=[];d.forEach((S,F)=>{S.level>=l.level&&S.level<=o.level&&p.push({x:S.resolution,y:S.resolution}),F<d.length-1&&x.push(Math.round(10*S.resolution/d[F+1].resolution)/10)}),p.sort((S,F)=>S.x-F.x);const I=this.computeBlockBoundary(c,g,m,r.origin,p,y),w=p.length>1?p.slice(1):null;let T;t.transposeInfo&&(T={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:a.keyProperties?._yxs.PacketSize??0});const v=x.length<=1||x.length>=3&&x.slice(0,-1).every(S=>S===x[0])?x[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/y))/10;if(a.storageInfo=new ve({blockWidth:r.size[0],blockHeight:r.size[1],pyramidBlockWidth:r.size[0],pyramidBlockHeight:r.size[1],pyramidResolutions:w,pyramidScalingFactor:v,compression:r.format,origin:r.origin,firstPyramidLevel:1,maximumPyramidLevel:y,tileInfo:r,transposeInfo:T,blockBoundary:I}),ws(a),this._set("rasterInfo",a),t.capabilities.toLowerCase().includes("tilemap")){const S={tileInfo:a.storageInfo.tileInfo,parsedUrl:Et(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Ui({layer:S})}}async fetchRawTile(i,e,s,t={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:r}=n,o=r!=null&&!!t.transposedVariableName;if(this._slices&&!o&&t.sliceId==null)return null;const l=o?0:n.maximumPyramidLevel-i+this._levelOffset,c=`${this.url}/tile/${l}/${e}/${s}`,u=this._slices?o?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!h)return null;const f=o?r.tileSize:n.tileInfo.size,d=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(d==null)return null;const y=n.blockBoundary[i];if(n.compression!=="jpg"||s>y.minCol&&s<y.maxCol&&e>y.minRow&&e<y.maxRow)return d;const{origin:g,blockWidth:m,blockHeight:p}=n,{x,y:I}=this.getPyramidPixelSize(i),w=Math.round((a.xmin-g.x)/x)%m,T=Math.round((a.xmax-g.x)/x)%m||m,v=Math.round((g.y-a.ymax)/I)%p,S=Math.round((g.y-a.ymin)/I)%p||p,F=s===y.minCol?w:0,_=e===y.minRow?v:0,C=s===y.maxCol?T:m,k=e===y.maxRow?S:p;return ki(d,{x:F,y:_},{width:C-F,height:k-_}),d}getSliceIndex(i){if(!this._slices||i==null||i.length===0)return null;const e=i;for(let s=0;s<this._slices.length;s++){const t=this._slices[s].multidimensionalDefinition;if(t.length===e.length&&!t.some(n=>{const a=e.find(r=>n.variableName===r.variableName&&r.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return s}return null}async fetchVariableStatisticsHistograms(i,e){const s=this.request(this.url+"/statistics",{query:{variable:i,f:"json"},signal:e}).then(a=>a.data?.statistics),t=this.request(this.url+"/histograms",{query:{variable:i,f:"json"},signal:e}).then(a=>a.data?.histograms),n=await Promise.all([s,t]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),n[1]?.[0]?.counts?.length||(n[1]=null),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(i,e={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(i,0,e.datumTransformation);if(s===null)return null;let t=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-t+this._levelOffset;const r=s.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,s.row,s.col,e)==="available")break}catch{}if(a--,t++,s=this.identifyPixelLocation(r,t,e.datumTransformation),s===null)return null}return a===-1||s==null?null:t}async _fetchRasterInfo(i){const e=this.sourceJSON;if(this.tileType==="Map"){const r=e.fullExtent||e.extent,o=Math.ceil((r.xmax-r.xmin)/e.pixelSizeX-.1),l=Math.ceil((r.ymax-r.ymin)/e.pixelSizeY-.1),c=z.fromJSON(e.spatialReference||r.spatialReference),u=new A({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new Se({width:o,height:l,bandCount:3,extent:L.fromJSON(r),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:s}=i,t=hi(this.url,this.sourceJSON,{signal:s,query:this.ioConfig.customFetchParameters}),n=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:s}).then(r=>r.data?.slices).catch(()=>null):null,a=await Promise.all([t,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_computeMinMaxLOD(i,e){const{pixelSize:s}=i,t=.5/i.width*s.x,{lods:n}=e,a=e.lodAt(Math.max.apply(null,n.map(f=>f.level))),r=e.lodAt(Math.min.apply(null,n.map(f=>f.level))),{tileType:o}=this;if(o==="Map")return this._levelOffset=n[0].level,[a,r];if(o==="Raster")return[n.find(f=>f.resolution===s.x)??a,r];const{minScale:l,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=n.find(f=>Math.abs(f.scale-c)<t),u||(u=n.filter(f=>f.scale>c).sort((f,d)=>f.scale>d.scale?1:-1)[0]??a));let h=r;return l>0&&(h=n.find(f=>Math.abs(f.scale-l)<t)??r,this._levelOffset=h.level-r.level),[u,h]}};function xs(i,e){if(!i)return null;const{minScale:s,maxScale:t,minLOD:n,maxLOD:a}=e;if(n!=null&&a!=null)return te.fromJSON({...i,lods:i.lods.filter(({level:r})=>r!=null&&r>=n&&r<=a)});if(s!==0&&t!==0){const r=c=>Math.round(1e4*c)/1e4,o=s?r(s):1/0,l=t?r(t):-1/0;return te.fromJSON({...i,lods:i.lods.filter(c=>{const u=r(c.scale);return u<=o&&u>=l})})}return te.fromJSON(i)}function ws(i){const{extent:e,spatialReference:s}=i;e.xmin>-1&&e.xmax>181&&s?.wkid&&s.isGeographic&&(i.nativeExtent=i.extent,i.transform=new Li,i.extent=i.transform.forwardTransform(e))}b([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),b([R()],de.prototype,"tileType",void 0),de=b([K("esri.layers.support.rasterDatasets.ImageServerRaster")],de);const Is=de,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ue=class extends le{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(i){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?i.signal:null,s=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:n}=this._parseHeader(s.data),{skipMapInfo:a,skipExtensions:r=[]}=this.ioConfig;if(!r.includes("aux.xml")&&!a){const p=await this._fetchAuxiliaryData(i);p!=null&&(t.statistics=p.statistics??t.statistics,t.histograms=p.histograms,p.histograms&&t.statistics==null&&(t.statistics=Ge(p.histograms)))}a&&this.updateImageSpaceRasterInfo(t),this._set("rasterInfo",t),this._files=n;const o=await this.request(n.index,{responseType:"array-buffer",signal:e});this._storageIndex=bs(o.data);const{blockWidth:l,blockHeight:c}=this.rasterInfo.storageInfo,u=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:h,height:f}=this.rasterInfo,d=[],y=this._getBandSegmentCount();let g=0,m=-1;for(;g<this._storageIndex.length;){m++;const p=Math.ceil(h/l/u**m)-1,x=Math.ceil(f/c/u**m)-1;g+=(p+1)*(x+1)*y*4,d.push({maxRow:x,maxCol:p,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=d,m>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=m),this.updateTileInfo()}async fetchRawTile(i,e,s,t={}){const{blockWidth:n,blockHeight:a,blockBoundary:r}=this.rasterInfo.storageInfo,o=r[i];if(!o||o.maxRow<e||o.maxCol<s||o.minRow>e||o.minCol>s)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(i,e,s);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const k=new Uint8Array(n*a);return new q({width:n,height:a,pixels:void 0,mask:k,validPixelCount:0})}const{bandIds:d}=this.ioConfig,y=this._getBandSegmentCount(),g=[];let m=0;for(m=0;m<y;m++)d&&!d.includes(m)||g.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:t.signal}));const p=await Promise.all(g),x=p.map(k=>k.data.byteLength).reduce((k,P)=>k+P),I=new Uint8Array(x),w=[];let T=0;for(m=0;m<y;m++)w.push(T),I.set(new Uint8Array(p[m].data),T),T+=p[m].data.byteLength;const v=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(I.buffer,{width:n,height:a,format:v,planes:d?.length||l,offsets:w,pixelType:c});if(S==null)return null;let{noDataValue:F}=this.rasterInfo;if(F!=null&&v!=="lerc"&&!S.mask&&(F=F[0],F!=null)){const k=S.width*S.height,P=new Uint8Array(k);if(Math.abs(F)>1e24)for(m=0;m<k;m++)Math.abs((S.pixels[0][m]-F)/F)>1e-6&&(P[m]=1);else for(m=0;m<k;m++)S.pixels[0][m]!==F&&(P[m]=1);S.mask=P}let _=0,C=0;if(h!==n||f!==a){let k=S.mask;if(k)for(m=0;m<a;m++)if(C=m*n,m<f)for(_=h;_<n;_++)k[C+_]=0;else for(_=0;_<n;_++)k[C+_]=0;else for(k=new Uint8Array(n*a),S.mask=k,m=0;m<f;m++)for(C=m*n,_=0;_<h;_++)k[C+_]=1}return S}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,s){const{blockWidth:t,blockHeight:n,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:r,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,f=0,d=0;for(h=0;h<i;h++)d=a**h,c=Math.ceil(r/t/d),u=Math.ceil(o/n/d),f+=c*u;d=a**i,c=Math.ceil(r/t/d),u=Math.ceil(o/n/d),f+=e*c+s,f*=4*l;const y=this._storageIndex.subarray(f,f+4*l);let g=0,m=0;const p=[];for(let x=0;x<l;x++)g=y[4*x]*2**32+y[4*x+1],m=g+y[4*x+2]*2**32+y[4*x+3],p.push({from:g,to:m});return{ranges:p,actualTileWidth:s<c-1?t:Math.ceil(r/d)-t*(c-1),actualTileHeight:e<u-1?n:Math.ceil(o/d)-n*(u-1)}}_parseHeader(i){const e=j(i,"MRF_META/Raster");if(!e)throw new O("mrf:open","not a valid MRF format");const s=j(e,"Size"),t=parseInt(s.getAttribute("x"),10),n=parseInt(s.getAttribute("y"),10),a=parseInt(s.getAttribute("c"),10),r=(X(e,"Compression")||"none").toLowerCase();if(!ee.has(r))throw new O("mrf:open","currently does not support compression "+r);const o=X(e,"DataType")||"UInt8",l=Y.get(o);if(l==null)throw new O("mrf:open","currently does not support pixel type "+o);const c=j(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=j(e,"DataValues");let d,y;if(f&&(y=f.getAttribute("NoData"),y!=null&&(d=y.trim().split(" ").map(k=>parseFloat(k)))),j(i,"MRF_META/CachedSource"))throw new O("mrf:open","currently does not support MRF referencing other data files");const g=j(i,"MRF_META/GeoTags"),m=j(g,"BoundingBox");let p,x=!1;if(m!=null){const k=parseFloat(m.getAttribute("minx")),P=parseFloat(m.getAttribute("miny")),M=parseFloat(m.getAttribute("maxx")),$=parseFloat(m.getAttribute("maxy")),B=X(g,"Projection")||"";let D=z.WGS84;if(B!=="LOCAL_CS[]")if(B.toLowerCase().startsWith("epsg:")){const E=Number(B.slice(5));isNaN(E)||E===0||(D=new z({wkid:E}))}else D=_e(B)??z.WGS84;else x=!0,D=new z({wkid:3857});p=new L(k,P,M,$),p.spatialReference=D}else x=!0,p=new L({xmin:-.5,ymin:.5-n,xmax:t-.5,ymax:.5,spatialReference:new z({wkid:3857})});const I=j(i,"MRF_META/Rsets"),w=parseInt(I?.getAttribute("scale")||"2",10),T=p.spatialReference,v=new ve({origin:new A({x:p.xmin,y:p.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:r,pyramidScalingFactor:w}),S=new A({x:p.width/t,y:p.height/n,spatialReference:T}),F=new Se({width:t,height:n,extent:p,isPseudoSpatialReference:x,spatialReference:T,bandCount:a,pixelType:l,pixelSize:S,noDataValue:d,storageInfo:v}),_=X(i,"datafile"),C=X(i,"IndexFile");return{rasterInfo:F,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:_||this.url.replace(".mrf",ee.get(r).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i?.signal});return Ve(e)}catch{return null}}};function bs(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,s,t,n,a,r;if(Fi){for(s=new Uint8Array(i),n=new ArrayBuffer(i.byteLength),t=new Uint8Array(n),a=0;a<i.byteLength/4;a++)for(r=0;r<4;r++)t[4*a+r]=s[4*a+3-r];e=new Uint32Array(n)}else e=new Uint32Array(i);return e}b([R()],ue.prototype,"_files",void 0),b([R()],ue.prototype,"_storageIndex",void 0),b([R({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),ue=b([K("esri.layers.support.rasterDatasets.MRFRaster")],ue);const Rs=ue;function vs(i){const e=i.fields,s=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",n=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=n.map(c=>c.name),r=[];let o=0,l=0;return s.forEach(c=>{const u={};for(u[t]=o++,l=1;l<a.length;l++)u[a[l]]=c[l-1];r.push({attributes:u})}),{displayFieldName:"",fields:n,features:r}}class Ss{static get supportedVersions(){return[5]}static parse(e){const s=new DataView(e),t=3&s.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const n=s.getUint32(4,!0),a=s.getUint16(8,!0),r=s.getUint16(10,!0),o={version:t,recordCount:n,headerByteCount:a,recordByteCount:r};let l=32;const c=[],u=[];let h;if(t===3){for(;s.getUint8(l)!==13;)h=String.fromCharCode(s.getUint8(l+11)).trim(),c.push({name:it(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:s.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<n&&e.byteLength-l>r;){const f=[];s.getUint8(l)===32?(l+=1,c.forEach(d=>{if(d.type==="C")f.push(it(new Uint8Array(e,l,d.length)).trim());else if(d.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim(),10));else if(d.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim()));else if(d.type==="D"){const y=String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim();f.push(new Date(parseInt(y.substring(0,4),10),parseInt(y.substring(4,6),10)-1,parseInt(y.substring(6,8),10)))}l+=d.length}),u.push(f)):l+=r}}return{header:o,fields:c,records:u,recordSet:vs({fields:c,records:u})}}}const Ae=(i,e)=>i.get(e)?.values,pe=(i,e)=>i.get(e)?.values?.[0];let re=class extends le{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(i){await this.init();const e=i?i.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!s)throw new O("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:n,isBigTiff:a}=Ci(s),r=[];await this._readIFDs(r,s,t,n,0,a?8:4,e);const{imageInfo:o,rasterInfo:l}=Ts(r),c=Mi(r),u=Oi(r);if(this._headerInfo={littleEndian:t,isBigTiff:a,ifds:r,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new O("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new O("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");l.isPseudoSpatialReference&&oe.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const h=r[0].get("PREDICTOR")?.values?.[0];if(r[0].get("SAMPLEFORMAT")?.values?.[0]===3&&h===2)throw new O("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:d,skipExtensions:y=[]}=this.ioConfig;if(!y.includes("aux.xml")&&!d){const g=await this._fetchAuxiliaryMetaData(i);g!=null&&_s(g,l)}y.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||d||(l.attributeTable=await this._fetchAuxiliaryTable(i),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),d&&this.updateImageSpaceRasterInfo(l),this.updateTileInfo()}async fetchRawTile(i,e,s,t={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(i,e,s))return null;const n=await this._fetchRawTiffTile(i,e,s,!1,t);if(n!=null&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(i,e,s,!0,t);a!=null&&a.pixels[0]instanceof Uint8Array&&(n.mask=a.pixels[0])}return n}async _readIFDs(i,e,s,t,n,a=4,r){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+n,to:t+n+this._bufferSize},responseType:"array-buffer",signal:r})).data,n=t+n,t=0);const o=await this._readIFD(e,s,t,n,ge.tiffTags,a,r);if(i.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(i,e,s,o.nextIFD-n,n,a,r)}async _readIFD(i,e,s,t,n=ge.tiffTags,a=4,r){if(!i)return null;const o=Pi(i,e,s,t,n,a);if(o.success){const l=[];if(o.ifd?.forEach(c=>{c.values||l.push(c)}),l.length>0){const c=l.map(h=>h.offlineOffsetSize).filter(Be),u=Math.min.apply(null,c.map(h=>h[0]));if(Math.min.apply(null,c.map(h=>h[0]+h[1]))-u<=this._bufferSize){const{data:h}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:r});i=h,t=u,l.forEach(f=>$i(i,e,f,t))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const c=o.ifd.get("GEOKEYDIRECTORY"),u=c?.values;if(u&&u.length>4){const h=u[0]+"."+u[1]+"."+u[2],f=await this._readIFD(i,e,c.valueOffset+6-t,t,ge.geoKeys,2,r);c.data=f.ifd,c.data&&c.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:r})).data).byteLength<o.requiredBufferSize?null:this._readIFD(i,e,0,t,ge.tiffTags,4,r)}async _fetchRawTiffTile(i,e,s,t,n={}){const a=this._getTileLocation(i,e,s,t);if(!a)return null;const{ranges:r,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,u=r.map(v=>this.request(this.url,{range:v,responseType:"array-buffer",signal:n.signal})),h=await Promise.all(u),f=h.map(v=>v.data.byteLength).reduce((v,S)=>v+S),d=h.length===1?h[0].data:new ArrayBuffer(f),y=[0],g=[0];if(h.length>1){const v=new Uint8Array(d);for(let S=0,F=0;S<h.length;S++){const _=h[S].data;v.set(new Uint8Array(_),F),y[S]=F,F+=_.byteLength,g[S]=_.byteLength}}const{blockWidth:m,blockHeight:p}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:y,sizes:g},width:m,height:p,planes:null,pixelType:null});if(x==null)return null;let I,w,T;if(o!==m||l!==p){let v=x.mask;if(v)for(I=0;I<p;I++)if(T=I*m,I<l)for(w=o;w<m;w++)v[T+w]=0;else for(w=0;w<m;w++)v[T+w]=0;else for(v=new Uint8Array(m*p),x.mask=v,I=0;I<l;I++)for(T=I*m,w=0;w<o;w++)v[T+w]=1}return x}_getTileLocation(i,e,s,t=!1){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,r=i===0?0:i-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[r]:r===0?o?.ifds[0]:o?.pyramidIFDs[r-1];if(!l)return null;const c=Bi(l,o),u=Ae(l,"TILEOFFSETS");if(u===void 0)return null;const h=Ae(l,"TILEBYTECOUNTS"),{minRow:f,minCol:d,maxRow:y,maxCol:g}=a[r];if(e>y||s>g||e<f||s<d)return null;const m=pe(l,"IMAGEWIDTH"),p=pe(l,"IMAGELENGTH"),x=pe(l,"TILEWIDTH"),I=pe(l,"TILELENGTH"),w=[];if(c){const{bandCount:T}=this.rasterInfo;for(let v=0;v<T;v++){const S=v*(y+1)*(g+1)+e*(g+1)+s;w[v]={from:u[S],to:u[S]+h[S]-1}}}else{const T=e*(g+1)+s;w.push({from:u[T],to:u[T]+h[T]-1})}for(let T=0;T<w.length;T++)if(w[T].from==null||!w[T].to||w[T].to<0)return null;return{ranges:w,ifd:l,actualTileWidth:s===g&&m%x||x,actualTileHeight:e===y&&p%I||I}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i?.signal});return Ve(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i?.signal}),s=Ss.parse(e);return s?.recordSet?je.fromJSON(s.recordSet):null}catch{return null}}};function Ts(i){const e=Di(i),{width:s,height:t,tileWidth:n,tileHeight:a,planes:r,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,pyramidResolutions:d,tileBoundary:y,affine:g,metadata:m}=e,p=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid;let x=_e(p),I=!!e.isPseudoGeographic;x==null&&(I=!0,x=new z({wkid:3857}));const w=new L({...e.extent,spatialReference:x}),T=new A(w?{x:w.xmin,y:w.ymax,spatialReference:x}:{x:0,y:0}),v=new ve({blockWidth:n,blockHeight:a,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:l,origin:T,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidResolutions:d,blockBoundary:y}),S=new A({x:(w.xmax-w.xmin)/s,y:(w.ymax-w.ymin)/t,spatialReference:x}),F=m?{BandProperties:m.bandProperties,DataType:m.dataType}:{};let _=null;const C=pe(i[0],"PHOTOMETRICINTERPRETATION"),k=Ae(i[0],"COLORMAP");if(C<=3&&k?.length>3&&k.length%3==0){_=[];const M=k.length/3;for(let $=0;$<M;$++)_.push([$,k[$]>>>8,k[$+M]>>>8,k[$+2*M]>>>8])}const P=new Se({width:s,height:t,bandCount:r,pixelType:o,pixelSize:S,storageInfo:v,spatialReference:x,isPseudoSpatialReference:I,keyProperties:F,extent:w,colormap:_,statistics:m?m.statistics:null});if(g?.length&&(P.nativeExtent=new L({xmin:-.5,ymin:.5-t,xmax:s-.5,ymax:.5,spatialReference:x}),P.transform=new Ue({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new A({x:(w.xmax-w.xmin)/s,y:(w.ymax-w.ymin)/t,spatialReference:x}),v.origin.x=-.5,v.origin.y=.5),d){const{x:M,y:$}=P.pixelSize;d.forEach(B=>{B.x*=M,B.y*=$})}return{imageInfo:e,rasterInfo:P}}function _s(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&e.statistics==null&&(e.statistics=Ge(i.histograms)),i.transform&&e.transform==null){e.transform=i.transform,e.nativeExtent=e.extent;const s=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new A({x:(s.xmax-s.xmin)/e.width,y:(s.ymax-s.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=s}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}b([R()],re.prototype,"_files",void 0),b([R()],re.prototype,"_headerInfo",void 0),b([R()],re.prototype,"_bufferSize",void 0),b([R({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),re=b([K("esri.layers.support.rasterDatasets.TIFFRaster")],re);const ks=re,H=new Map;H.set("MRF",{desc:"Meta Raster Format",constructor:Rs}),H.set("TIFF",{desc:"GeoTIFF",constructor:ks}),H.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Is}),H.set("JPG",{desc:"JPG Raster Format",constructor:Ie}),H.set("PNG",{desc:"PNG Raster Format",constructor:Ie}),H.set("GIF",{desc:"GIF Raster Format",constructor:Ie}),H.set("BMP",{desc:"BMP Raster Format",constructor:Ie}),H.set("CovJSON",{desc:"COVJSON Raster Format",constructor:ds}),H.set("MEMORY",{desc:"In Memory Raster Format",constructor:qe});class $e{static get supportedFormats(){const e=new Set;return H.forEach((s,t)=>e.add(t)),e}static async open(e){const{url:s,ioConfig:t,source:n,sourceJSON:a}=e;let r=e.datasetFormat??t?.datasetFormat;r==null&&(s.includes(".")?r=s.slice(s.lastIndexOf(".")+1).toUpperCase():n?.type?.toLowerCase()==="coverage"?r="CovJSON":n?.extent&&n.pixelblocks&&(r="MEMORY")),r==="OVR"||r==="TIF"?r="TIFF":r==="JPG"||r==="JPEG"||r==="JFIF"?r="JPG":r==="COVJSON"&&(r="CovJSON"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const o={url:s,source:n,sourceJSON:a,datasetFormat:r,ioConfig:t??{bandIds:null,sampling:null}};if(Object.keys(o).forEach(h=>{o[h]==null&&delete o[h]}),r){if(!this.supportedFormats.has(r))throw new O("rasterfactory:open","not a supported format "+r);if(r==="CRF")throw new O("rasterfactory:open",`cannot open raster: ${s}`);const h=new(H.get(r)).constructor(o);return await h.open({signal:e.signal}),h}const l=Array.from(H.keys()).filter(h=>h!=="CovJSON"&&h!=="Memory");let c=0;const u=()=>{if(r=l[c++],!r||r==="CRF")return null;const h=new(H.get(r)).constructor(o);return h.open({signal:e.signal}).then(()=>h).catch(()=>u())};return u()}static register(e,s,t){H.has(e.toUpperCase())||H.set(e.toUpperCase(),{desc:s,constructor:t})}}let N=class extends Jt(At(Hi(Wi(Xt(ls(ji(Yt(Gi(Lt(zt(Vt))))))))))){constructor(...i){super(...i),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Ht(async(e,s,t)=>{const{save:n,saveAs:a}=await ze(()=>import("./imageryUtils-271d055b.js"),["./imageryUtils-271d055b.js","./utils-902dff06.js","./index-cc5260cc.js","./index-e15ba190.css"],import.meta.url);switch(e){case ye.SAVE:return n(this,s);case ye.SAVE_AS:return a(this,t,s)}})}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(Wt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const i=[new he({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new he({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=this.raster?.rasterInfo??this.serviceRasterInfo,s=e?.attributeTable,t=s!=null?s.fields:null,n="Raster.";if(t){const o=t.filter(l=>l.type!=="oid"&&l.name.toLowerCase()!=="value").map(l=>{const c=l.clone();return c.name=n+l.name,c});i.push(...o)}const a=e?.dataType,r=e?.multidimensionalInfo;if((a==="vector-magdir"||a==="vector-uv")&&r!=null){const o=r.variables[0].unit?.trim(),l="Magnitude"+(o?` (${o})`:"");i.push(new he({name:"Raster.Magnitude",alias:l,domain:null,editable:!1,type:"double"})),i.push(new he({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(i){const{rasterFields:e}=this,s=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return qi({fields:e,title:this.title},{...i,visibleFieldNames:s})}async generateRasterInfo(i,e){if(i=Le(De,i),await this.load(),!i||i.functionName?.toLowerCase()==="none")return this.serviceRasterInfo;try{const{rasterInfo:s}=await this._openFunctionRaster(i,e);return s}catch(s){throw s instanceof O?s:new O("imagery-tile-layer","the given raster function is not supported")}}async save(i){return this._debouncedSaveOperations(ye.SAVE,i)}async saveAs(i,e){return this._debouncedSaveOperations(ye.SAVE_AS,e,i)}write(i,e){const s=this._primaryRasters[0]??this.raster;if(this.loaded?s.datasetFormat==="RasterTileServer"&&(s.tileType==="Raster"||s.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e?.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new O("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){let e=!1;if(this.raster)await this._openFromRaster(this.raster,i),e=this.raster.datasetFormat==="Function";else{const{url:t,rasterFunction:n,source:a}=this;if(!t&&!a)throw new O("imagery-tile-layer:open","missing url or source parameter");a?await this._openFromSource(a,i):n?await this._openFromUrlWithRasterFunction(t,n,i):await this._openFromUrl(t,i)}const s=this.raster.rasterInfo;if(!s)throw new O("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Gt(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}async _openFromRaster(i,e){i.rasterInfo||await i.open({signal:e}),this._primaryRasters=i.datasetFormat==="Function"?i.primaryRasters.rasters:[i],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(i,e,s){const t=[i];e&&zi(e.toJSON(),t);const n=await Promise.all(t.map(r=>$e.open({url:r,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:s}))),a=n.findIndex(r=>r==null);if(a>-1)throw new O("imagery-tile-layer:open",`cannot open raster: ${t[a]}`);return this._primaryRasters=n,this._initializeWithFunctionRaster(e)}async _openFromUrl(i,e){const s=await $e.open({url:i,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(s==null)throw new O("imagery-tile-layer:open",`cannot open raster: ${i}`);this._primaryRasters=[s],this.raster=s}async _openFromSource(i,e){const s="the tiled imagery data source is not supported",t=i.type?.toLowerCase()==="coverage"?"CovJSON":i.extent&&i.pixelBlock?"MEMORY":null;if(!t)throw new O("imagery-tile-layer:open",s);t==="MEMORY"&&(i={extent:i.extent,pixelBlocks:[i.pixelBlock]});const n=await $e.open({url:"",source:i,datasetFormat:t,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(n==null)throw new O("imagery-tile-layer:open",s);this._primaryRasters=[n],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=n}async _openFunctionRaster(i,e){const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(a=>s[a.url]=a);const t=gt(i.functionDefinition?.toJSON()??i.toJSON(),s),n=new xt({rasterFunction:t});return await n.open(e),n}async _initializeWithFunctionRaster(i,e){try{this.raster=await this._openFunctionRaster(i,e)}catch(s){s instanceof O&&oe.getLogger(this).error("imagery-tile-layer:open",s.message),oe.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};b([R({clonable:!1})],N.prototype,"_primaryRasters",void 0),b([R({type:[jt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],N.prototype,"bandIds",void 0),b([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Ut(fi)],N.prototype,"interpolation",void 0),b([R(mi)],N.prototype,"legendEnabled",void 0),b([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],N.prototype,"isReference",void 0),b([R({type:["show","hide"]})],N.prototype,"listMode",void 0),b([R({json:{read:!0,write:!0}})],N.prototype,"blendMode",void 0),b([R()],N.prototype,"sourceJSON",void 0),b([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],N.prototype,"version",void 0),b([R({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),b([R({type:["ArcGISTiledImageServiceLayer"]})],N.prototype,"operationalLayerType",void 0),b([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,s){e[s]=!i}}}})],N.prototype,"popupEnabled",void 0),b([R({type:qt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],N.prototype,"popupTemplate",void 0),b([R({readOnly:!0})],N.prototype,"defaultPopupTemplate",null),b([R({readOnly:!0,type:[he]})],N.prototype,"fields",void 0),b([R({readOnly:!0,type:[he]})],N.prototype,"rasterFields",null),b([R({constructOnly:!0})],N.prototype,"source",void 0),N=b([K("esri.layers.ImageryTileLayer")],N);const tn=N;export{tn as default};
