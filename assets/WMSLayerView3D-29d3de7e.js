import{aj as s,ak as h,am as y,ao as f,at as m,ay as g,bS as P}from"./index-b9c5f9ae.js";import{N as v}from"./DynamicLayerView3D-0d44194f.js";import{a as E}from"./ExportWMSImageParameters-80f4620c.js";import{i as I}from"./timeSupport-53bf9b98.js";import"./LayerView3D-2a51d3a6.js";import"./projectExtentUtils-2c067488.js";import"./ImageMaterial-d8618430.js";import"./LayerView-fa457db7.js";import"./RefreshableLayerView-355ffb88.js";const F=o=>{let e=class extends o{initialize(){this.exportImageParameters=new E({layer:this.layer})}destroy(){this.exportImageParameters=f(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return I(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(t,r){const{layer:i}=this;if(!t)throw new m("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:n}=i;if(!n)throw new m("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:n});const p=this.createFetchPopupFeaturesQuery(t);if(!p)return[];const{extent:a,width:u,height:l,x:d,y:w}=p;if(!(a&&u&&l))throw new m("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:u,height:l});const x=await i.fetchFeatureInfo(a,u,l,d,w);return g(r),x}};return s([h()],e.prototype,"exportImageParameters",void 0),s([h({readOnly:!0})],e.prototype,"exportImageVersion",null),s([h()],e.prototype,"layer",void 0),s([h({readOnly:!0})],e.prototype,"timeExtent",null),e=s([y("esri.views.layers.WMSLayerView")],e),e};let c=class extends F(v){constructor(){super(...arguments),this.type="wms-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new m("layerview:spatial-reference-incompatible","The spatial references supported by this WMS layer are incompatible with the spatial reference of the view"))),this._updatingHandles.add(()=>this.exportImageParameters?.version,()=>{this._updatingHandles.addPromise(this.refreshDebounced())})}createFetchPopupFeaturesQuery(o){const e=this.findExtentInfoAt(o),t=e.extent,r=new P(t[0],t[1],t[2],t[3],this._spatialReference),i=e.imageSize,n=i.width,p=i.height,a=r.width/n;return{extent:r,width:n,height:p,x:Math.round((o.x-r.xmin)/a),y:Math.round((r.ymax-o.y)/a)}}getFetchOptions(){return{timeExtent:this.timeExtent}}};c=s([y("esri.views.3d.layers.WMSLayerView3D")],c);const z=c;export{z as default};
