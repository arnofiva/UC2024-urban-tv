import{gb as d,gc as g,bA as m,gd as h,bz as p,ge as y,gf as a,ax as w}from"./index-75797708.js";import{n as b}from"./date-430969b3.js";class _{constructor(){this.code=null,this.description=null}}class I{constructor(t){this.error=new _,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function c(n){return new I(n)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function v(n){return new q(n)}const u=new Set;function x(n,t,e,f=!1){u.clear();for(const i in e){const r=n.get(i);if(!r)continue;const o=P(r,e[i]);if(u.add(r.name),r&&(f||r.editable)){const l=d(r,o);if(l)return c(g(l,r,o));t[r.name]=o}}for(const i of n?.requiredFields??[])if(!u.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,t){let e=t;return m(n)&&typeof t=="string"?e=parseFloat(t):h(n)&&t!=null&&typeof t!="string"?e=String(t):p(n)&&typeof t=="string"&&(e=b(t)),y(e)}let s;function F(n,t){if(!n||!a(t))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(t,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-c9131672.js"),["./geometryEngineJSON-c9131672.js","./geometryEngineBase-1fd17bb5.js","./index-75797708.js","./index-e15ba190.css","./geometryEngineJSON-d5c44941.js","./json-48e3ea08.js"],import.meta.url)),s}async function G(n,t){!a(n)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await j()}export{v as d,c as f,G as j,x as p,F as y};
