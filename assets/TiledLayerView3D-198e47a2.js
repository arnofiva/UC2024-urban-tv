import{aj as l,ak as r,aY as u,d1 as d,am as g,d2 as y,d3 as v,aO as f,at as n,c$ as S,d4 as w}from"./index-cc5260cc.js";const R=m=>{let i=class extends m{constructor(){super(...arguments),this.hasMixedImageFormats=!0}get imageFormatIsOpaque(){return!1}get fullExtent(){return this.layer.fullExtent}get isOpaque(){return this.fullOpacity>=1&&this.imageFormatIsOpaque}get visibleAtCurrentScale(){if(!y(this.layer.minScale,this.layer.maxScale)||!this.view.terrainScale)return!0;const e=Math.round(this.view.basemapTerrain.tilingScheme.levelAtScale(this.view.terrainScale));return e>=this.displayLevelRange.minLevel&&e<=this.displayLevelRange.maxLevel}get dataScaleRange(){const e=this.tileInfo.lods;let a=e[0].scale,t=e[e.length-1].scale;if("tilemapCache"in this.layer&&this.layer.tilemapCache){const{effectiveMinLOD:s,effectiveMaxLOD:o}=this.layer.tilemapCache;a=this.tileInfo.lodAt(s).scale,t=this.tileInfo.lodAt(o).scale}return{minScale:a,maxScale:t}}canResume(){const e=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;return this.visible&&this.layer?.loaded&&!this.parent?.suspended&&this.view?.ready&&v(e)&&this.visibleAtCurrentTimeExtent||!1}get dataLevelRange(){const{minScale:e,maxScale:a}=this.dataScaleRange;return this.levelRangeFromScaleRange(e,a)}get displayLevelRange(){const e=this.layer.minScale||this.dataScaleRange.minScale,a=this.layer.maxScale||this.dataScaleRange.maxScale,t=this.levelRangeFromScaleRange(e,a);return this.layer.maxScale&&t.maxLevel++,t}get performanceInfo(){return new f(this.view.basemapTerrain.getUsedMemoryForLayerView(this))}getTileUrl(e){return this.layer.getTileUrl(e[0],e[1],e[2])}_addTilingSchemeMatchPromise(){if(this.fullExtent==null)return this.addResolvingPromise(Promise.reject(new n("tilingscheme:extent-not-defined","This layer doesn't define a fullExtent.")));const e=this._getTileInfoSupportError(this.tileInfo,this.fullExtent);if(e)return this.addResolvingPromise(Promise.reject(e));this.addResolvingPromise(S(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{const a=this.view.basemapTerrain.tilingScheme,t="tilemapCache"in this.layer?this.layer.tilemapCache?.effectiveMaxLOD:void 0,s=this._getTileInfoCompatibilityError(this.tileInfo,a,t);if(s)throw s}))}_getTileInfoSupportError(e,a){const t=w(e,a,this.view.spatialReference,this.view.state.viewingMode,"tilemapCache"in this.layer?this.layer.tilemapCache?.effectiveMaxLOD:void 0);if(!t)return;const s={layer:this.layer,error:t};switch(t.name){case"tilingscheme:spatial-reference-mismatch":case"tilingscheme:global-unsupported-spatial-reference":case"tilingscheme:local-unsupported-spatial-reference":return new n("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",s);default:return new n("layerview:tiling-scheme-unsupported","The tiling scheme of this layer is not supported by SceneView",s)}}_getTileInfoCompatibilityError(e,a,t){return e!=null&&a.compatibleWith(e,t)?null:new n("layerview:tiling-scheme-incompatible","The tiling scheme of this layer is incompatible with the tiling scheme of the surface")}levelRangeFromScaleRange(e,a){const t={minLevel:0,maxLevel:1/0},s=this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.tilingScheme;if(!s)return t;const o=s.levels[0],c=p=>{const h=Math.log(o.scale/p)/Math.LN2;return .5-Math.abs(.5-h%1)<1e-9?Math.round(h):Math.ceil(h)};return e!=null&&e>0&&(t.minLevel=Math.max(0,c(e))),a!=null&&a>0&&(t.maxLevel=Math.max(0,c(a))),t}isUpdating(){return!!(this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.updating)}};return l([r({readOnly:!0})],i.prototype,"imageFormatIsOpaque",null),l([r({readOnly:!0})],i.prototype,"updating",void 0),l([r(u)],i.prototype,"updatingProgress",void 0),l([r(d)],i.prototype,"updatingProgressValue",void 0),l([r()],i.prototype,"hasMixedImageFormats",void 0),l([r()],i.prototype,"fullExtent",null),l([r({readOnly:!0})],i.prototype,"isOpaque",null),l([r({readOnly:!0})],i.prototype,"visibleAtCurrentScale",null),l([r()],i.prototype,"dataScaleRange",null),l([r({readOnly:!0})],i.prototype,"dataLevelRange",null),l([r({readOnly:!0})],i.prototype,"displayLevelRange",null),l([r()],i.prototype,"layer",void 0),i=l([g("esri.views.3d.layers.TiledLayerView3D")],i),i};export{R as p};
