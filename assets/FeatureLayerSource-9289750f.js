import{dA as U,cV as k,jL as P,aH as Q,jM as G,jN as $,jO as V,aL as v,at as q,aX as H,cB as X,cx as L,aj as E,ak as O,am as z,iF as B,h0 as W,aR as Y,aU as M,av as g,dP as x,bS as Z,cD as K,cK as tt,dv as T,ax as N,bX as j,c7 as et,jP as at,cX as st,au as rt,jQ as it,f_ as nt,jR as ot,gN as ut,bT as lt,jS as dt,bl as ct}from"./index-75797708.js";import{isFeatureIdentifierArrayWithGlobalId as pt,isFeatureIdentifierArrayWithObjectId as ht}from"./editingSupport-805c09e8.js";import{o as yt}from"./clientSideDefaults-0a851d22.js";import{x as mt}from"./QueryTask-cf21e623.js";import{T as F}from"./labelingInfo-6875761c.js";import{s as gt}from"./executeQueryJSON-63562981.js";import{i as ft}from"./editsZScale-6832178a.js";import{i as wt,a as bt,o as Rt,t as It}from"./EditBusLayer-0d63c689.js";import"./normalizeUtils-14f09049.js";import"./normalizeUtilsCommon-eecee6b6.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./executeForIds-a35d422d.js";import"./query-dd3a3bae.js";import"./pbfQueryUtils-335efe71.js";import"./pbf-19f7cae1.js";import"./queryZScale-2c7fab80.js";import"./executeQueryPBF-6da5cff7.js";import"./FeatureSet-285ce5c1.js";import"./featureQueryAll-8963e799.js";import"./jsonUtils-e39cab6d.js";import"./UniqueValueRenderer-e5955946.js";import"./ColorStop-6a565283.js";import"./diffUtils-0e3a2a24.js";import"./colorRamps-aa93f22c.js";import"./FieldsIndex-e68ff75c.js";import"./UnknownTimeZone-bc39bc88.js";import"./heatmapUtils-b63f4199.js";import"./RelationshipQuery-fd495a9f.js";async function D(e,t,a){const{geometry:r}=t,s={...t.attributes};if(a!=null&&r?.type==="mesh"){const{transformFieldRoles:i}=a,{origin:n,spatialReference:o,vertexSpace:u}=r,d=r.transform??new U,l=u.type==="local",m=e.spatialReference,R=m.isGeographic,I=k(m,o),p=P(o,m)&&Q(o,m);if(!(l&&R&&p||!l&&!R&&I))return null;const c=G(n,o,m);if(c==null)return null;if(s[i.originX]=c.x,s[i.originY]=c.y,s[i.originZ]=c.z??0,d!=null){const{translation:S,scale:h,rotation:f}=d,y=l?1:$(o)/$(m);s[i.translationX]=S[0]*y,s[i.translationY]=S[2]*y,s[i.translationZ]=-S[1]*y,s[i.scaleX]=h[0],s[i.scaleY]=h[2],s[i.scaleZ]=h[1],s[i.rotationX]=f[0],s[i.rotationY]=f[2],s[i.rotationZ]=-f[1],s[i.rotationDeg]=f[3]}return{attributes:s}}return r==null?{attributes:s}:r.type==="mesh"||r.type==="extent"?null:{geometry:r.toJSON(),attributes:s}}async function St(e,t){const a=await Promise.all((t.addAttachments??[]).map(i=>J(e,i))),r=await Promise.all((t.updateAttachments??[]).map(i=>J(e,i))),s=t.deleteAttachments??[];return a.length||r.length||s.length?{adds:a,updates:r,deletes:[...s]}:null}async function J(e,t){const{feature:a,attachment:r}=t,{globalId:s,name:i,contentType:n,data:o,uploadId:u}=r,d={globalId:s};if(a&&("attributes"in a?d.parentGlobalId=a.attributes?.[e.globalIdField]:a.globalId&&(d.parentGlobalId=a.globalId)),u)d.uploadId=u;else if(o){const l=await V(o);l&&(d.contentType=l.mediaType,d.data=l.data),o instanceof File&&(d.name=o.name)}return i&&(d.name=i),n&&(d.contentType=n),d}function qt(e,t,a){if(!t||t.length===0)return[];if(a&&pt(t))return t.map(s=>s.globalId);if(ht(t))return t.map(s=>s.objectId);const r=a?e.globalIdField:e.objectIdField;return r?t.map(s=>s.getAttribute(r)):[]}function _t(e){const t=e?.assetMaps;if(t){for(const s of t.addResults)s.success||v.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${s.globalId}.`);for(const s of t.updateResults)s.success||v.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${s.globalId}.`)}const a=e?.attachments,r={addFeatureResults:e?.addResults?.map(b)??[],updateFeatureResults:e?.updateResults?.map(b)??[],deleteFeatureResults:e?.deleteResults?.map(b)??[],addAttachmentResults:a?.addResults?a.addResults.map(b):[],updateAttachmentResults:a?.updateResults?a.updateResults.map(b):[],deleteAttachmentResults:a?.deleteResults?a.deleteResults.map(b):[]};return e?.editMoment&&(r.editMoment=e.editMoment),r}function b(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new q("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function A(e,t){return new H({attributes:e.attributes,geometry:X({...e.geometry,spatialReference:t})})}function Et(e,t){return{adds:e?.adds?.map(a=>A(a,t))||[],updates:e?.updates?.map(a=>({original:A(a[0],t),current:A(a[1],t)}))||[],deletes:e?.deletes?.map(a=>A(a,t))||[],spatialReference:t}}function Ot(e){const t=e.details.raw,a=+t.code,r=+t.extendedCode;return a===500&&(r===-2147217144||r===-2147467261)}const Ft=new L({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),At=new L({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let _=class extends B{constructor(e){super(e),this.type="feature-layer",this.supportedSourceTypes=new Set(["Feature Layer","Oriented Imagery Layer","Table","Catalog Layer"]),this.refresh=W(async()=>{await this.load();const t=this.sourceJSON.editingInfo?.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const a=t!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:a,updates:a?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,a=this._fetchService(t,{...e}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e)).then(()=>this._ensureLatestMetadata(e));return this.addResolvingPromise(a),Promise.resolve(this)}initialize(){this.addHandles([Y(()=>{const e=this.layer;return e&&"lastEditsEventDate"in e?e.lastEditsEventDate:null},e=>this._handleLastEditsEventChange(e))])}destroy(){this._removeEditInterceptor()}get queryTask(){const{capabilities:e,parsedUrl:t,gdbVersion:a,spatialReference:r,fieldsIndex:s}=this.layer,i="infoFor3D"in this.layer?this.layer.infoFor3D:null,n="dynamicDataSource"in this.layer?this.layer.dynamicDataSource:null,o=M("featurelayer-pbf")&&e?.query.supportsFormatPBF&&i==null,u=e?.operations?.supportsQueryAttachments??!1;return new mt({url:t.path,pbfSupported:o,fieldsIndex:s,infoFor3D:i,dynamicDataSource:n,gdbVersion:a,sourceSpatialReference:r,queryAttachmentsSupported:u})}async addAttachment(e,t){await this.load();const{layer:a}=this;await F(a,"editing");const r=e.attributes[a.objectIdField],s=a.parsedUrl.path+"/"+r+"/addAttachment",i=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(t,i.query);try{const o=await g(s,{body:n});return b(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(r,o)}}async updateAttachment(e,t,a){await this.load();const{layer:r}=this;await F(r,"editing");const s=e.attributes[r.objectIdField],i=r.parsedUrl.path+"/"+s+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,n.query);try{const u=await g(i,{body:o});return b(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(s,u)}}async applyEdits(e,t){await this.load();const{layer:a}=this;await F(a,"editing");const r="infoFor3D"in a?a.infoFor3D:null,s=r!=null,i=s||(t?.globalIdUsed??!1),n=s?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=e.addFeatures?.map(w=>D(this.layer,w,r))??[],u=(await Promise.all(o)).filter(x),d=e.updateFeatures?.map(w=>D(this.layer,w,r))??[],l=(await Promise.all(d)).filter(x),m=qt(this.layer,e.deleteFeatures,i);ft(u,l,a.spatialReference);const R=await St(this.layer,e),I=a.capabilities.editing.supportsAsyncApplyEdits&&s,p=t?.gdbVersion||a.gdbVersion,c={gdbVersion:p,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,async:I};await wt(this.layer.url,p,!0);const S=bt(this.layer.url,p||null);if(await Rt(a.url,p,a.historicMoment))throw new q("feature-layer-source:historic-version","Editing a historic version is not allowed");t?.returnServiceEditsOption?(c.edits=JSON.stringify([{id:a.layerId,adds:u.length?u:null,updates:l.length?l:null,deletes:m.length?m:null,attachments:R,assetMaps:n}]),c.returnServiceEditsOption=Ft.toJSON(t?.returnServiceEditsOption),c.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(c.adds=u.length?JSON.stringify(u):null,c.updates=l.length?JSON.stringify(l):null,c.deletes=m.length?i?JSON.stringify(m):m.join(","):null,c.attachments=R&&JSON.stringify(R),c.assetMaps=n!=null?JSON.stringify(n):void 0);const h=this._getLayerRequestOptions({method:"post",query:c});S&&(h.authMode="immediate",h.query.returnEditMoment=!0,h.query.sessionId=It);const f=t?.returnServiceEditsOption?a.url:a.parsedUrl.path;let y;try{y=I?await this._asyncApplyEdits(f+"/applyEdits",h):await g(f+"/applyEdits",h)}catch(w){if(!Ot(w))throw w;h.authMode="immediate",y=I?await this._asyncApplyEdits(f+"/applyEdits",h):await g(f+"/applyEdits",h)}return this._createEditsResult(y)}async deleteAttachments(e,t){await this.load();const{layer:a}=this;await F(a,"editing");const r=e.attributes[a.objectIdField],s=a.parsedUrl.path+"/"+r+"/deleteAttachments";try{return(await g(s,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(b)}catch(i){throw this._createAttachmentErrorResult(r,i)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const a=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:r,url:s}=this.layer,{data:i}=await g(`${s}/${r}`,a),{id:n,extent:o,fullExtent:u,timeExtent:d}=i,l=o||u;return{id:n,fullExtent:l&&Z.fromJSON(l),timeExtent:d&&K.fromJSON({start:d[0],end:d[1]})}})}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){await this.load();const a=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});return e.outStatistics?.length&&a.features.length&&a.features.forEach(r=>{const s=r.attributes;e.outStatistics?.forEach(({outStatisticFieldName:i})=>{if(i){const n=i.toLowerCase();n&&n in s&&i!==n&&(s[i]=s[n],delete s[n])}})}),a}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!tt(this.layer.url))return"unavailable";const e=T(this.layer.url,"status"),t=await g(e,{query:{f:"json"}});return At.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:a}=await N(()=>import("./uploadAssets-2bb48869.js"),["./uploadAssets-2bb48869.js","./index-75797708.js","./index-e15ba190.css","./uploadAssetErrors-ee9b1ac0.js"],import.meta.url);return a(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}_handleLastEditsEventChange(e){const t=this.layer;if(e==null||!("capabilities"in t)||!("effectiveCapabilities"in t)||!(!t.capabilities?.operations?.supportsEditing&&t.effectiveCapabilities?.operations?.supportsEditing))return;const a=t.url;a!=null&&("layerId"in t&&T(a,t.layerId.toString()),this._getOrCreateEditInterceptor(a).before=r=>{const s=r.requestOptions.method??"auto";if(s==="auto"||s==="head"){const i=r.requestOptions.query??{};i._ts=e.getTime(),r.requestOptions.query=i}})}_getOrCreateEditInterceptor(e){return this._editInterceptor==null&&(this._editInterceptor={urls:e},j.request.internalInterceptors.push(this._editInterceptor)),this._editInterceptor}_removeEditInterceptor(){this._editInterceptor!=null&&(et(j.request.internalInterceptors,this._editInterceptor),this._editInterceptor=null)}async _asyncApplyEdits(e,t){const a=(await g(e,t)).data.statusUrl;for(;;){const r=(await g(a,{query:{f:"json"},responseType:"json"})).data;switch(r.status){case"Completed":return g(r.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new q("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new q("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await at(vt)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const r={};M("featurelayer-advanced-symbols")&&(r.returnAdvancedSymbols=!0),t?.cacheBust&&(r._ts=Date.now());const{data:s}=await g(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:r,signal:t?.signal}));e=s}this.sourceJSON=await this._patchServiceJSON(e,t?.signal);const a=e.type;if(!this.supportedSourceTypes.has(a))throw new q("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){if(e.type!=="Table"&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const a=yt(e.geometryType).renderer;st("drawingInfo.renderer",a,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:a}=await g(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(a){rt(a)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length||await this._areAllAssetsAlreadyMapped(t))return null;const a=e.addFeatures.filter(i=>i.geometry);if(t.length!==a.length+e.updateFeatures.length)throw new q("feature-layer-source:unsupported-mesh-edits","Mixing attribute only edits with mesh geometry edits is not currently supported");const r=new Array,s=new Map;for(const i of t){const{geometry:n}=i,{vertexSpace:o}=n;if(it(o))r.push(n);else{const u=n.anchor,{convertMeshVertexSpace:d}=await N(()=>import("./convertMeshVertexSpace-783b143f.js"),["./convertMeshVertexSpace-783b143f.js","./index-75797708.js","./index-e15ba190.css"],import.meta.url),l=await d(n,new nt({origin:[u.x,u.y,u.z??0]}));s.set(l,n),i.geometry=l,r.push(l)}}await this.uploadAssets(r);for(const[i,n]of s)n.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(t),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,r=this.layer.parsedUrl;for(const s of e){const i=s.geometry,{metadata:n}=i,o=n.getExternalSourcesOnService(r),u=s.getAttribute(a);if(o.length===0){v.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:d}=o.find(ot)??o[0];for(const l of d)l.parts.length===1?t.push({globalId:ut(),parentGlobalId:u,assetName:l.assetName,assetHash:l.parts[0].partHash,flags:[]}):v.getLogger(this).error(`Skipping asset ${l.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,r=[];let s=null;if(Array.isArray(t))for(const n of t)r.push({id:n.id,editedFeatures:n.editedFeatures}),n.id===a&&(s={addResults:n.addResults??[],updateResults:n.updateResults??[],deleteResults:n.deleteResults??[],attachments:n.attachments,editMoment:n.editMoment});else s=t;const i=_t(s);if(r.length>0){i.editedFeatureResults=[];for(const n of r){const{editedFeatures:o}=n,u=o?.spatialReference?new lt(o.spatialReference):null;i.editedFeatureResults.push({layerId:n.id,editedFeatures:Et(o,u)})}}return i}_createAttachmentErrorResult(e,t){const a=t.details.messages?.[0]||t.message,r=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new q("feature-layer-source:attachment-failure",a,{code:r})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const r in t){const s=t[r];s!=null&&(a.set?a.set(r,s):a.append(r,s))}return a}_getLayerRequestOptions(e={}){const{layer:t,layer:{parsedUrl:a,gdbVersion:r}}=this;return{...e,query:{gdbVersion:r,layer:"dynamicDataSource"in t&&t.dynamicDataSource?JSON.stringify({source:t.dynamicDataSource}):void 0,...a.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _areAllAssetsAlreadyMapped(e){const{layer:t}=this,{globalIdField:a,parsedUrl:r}=t,s="infoFor3D"in t?t.infoFor3D:null;if(s==null||a==null)return!1;const i=dt(s);if(i==null)return!1;const n=T(r.path,`../${i.id}`),o=new Array;for(const p of e){if(!(p.geometry.metadata.getExternalSourcesOnService(r).length>0))return!1;o.push(p)}const u=o.map(p=>p.getAttribute(a)).filter(x);if(u.length===0)return!1;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:l}}=s,m=new ct({where:`${d} IN (${u.map(p=>`'${p}'`)})`,outFields:[l,d],returnGeometry:!1}),R=await gt(n,m),{features:I}=R;return I.length!==0&&!o.some(p=>{const c=p.getAttribute(a);if(!c)return!0;const{metadata:S}=p.geometry,h=I.filter(y=>y.getAttribute(d)===c);if(h.length===0)return!0;const f=h.map(y=>y.getAttribute(l));return S.getExternalSourcesOnService(r).flatMap(({source:y})=>y.flatMap(w=>w.parts.map(C=>C.partHash))).some(y=>f.every(w=>y!==w))})}};E([O()],_.prototype,"type",void 0),E([O({constructOnly:!0})],_.prototype,"layer",void 0),E([O({constructOnly:!0})],_.prototype,"supportedSourceTypes",void 0),E([O({readOnly:!0})],_.prototype,"queryTask",null),_=E([z("esri.layers.graphics.sources.FeatureLayerSource")],_);const vt=1e3,re=_;export{re as default};
