import{aj as r,aq as b,be as f,ah as m,aN as C,bf as w,aR as u,aS as V,ao as c,bg as v,bh as E,aB as S,bi as _,bj as p,bk as h,bl as x,aX as d,aQ as O,aZ as G,ak as a,am as P,bm as A,bn as $}from"./index-75797708.js";import{d as H}from"./diffUtils-0e3a2a24.js";import{z as I,p as R,u as z,s as j,a as D}from"./Graphics3DObjectStates-d0fd362c.js";let s=class extends b{constructor(e){super(e),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=f.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null,this._updatingHandles=new m}initialize(){const{layer:e}=this,i="effectiveScaleRange"in e?e:null,l=this.scaleVisibilityEnabled&&i!=null,n=new I({owner:this,layer:this.owner.layer,preferredUpdatePolicy:C.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(t,o)=>new R({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:o,elevationProvider:this.view.elevationProvider}),scaleVisibility:l?(t,o)=>new z({graphicsCoreOwner:this,layer:i,queryGraphicUIDsInExtent:o,graphicsCore:t,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:t=>new j(t)}});if(this._set("graphicsCore",n),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new D({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const t=this.owner;this._updatingHandles.add(()=>t.fullOpacity,()=>this.graphicsCore.opacityChange())}if("elevationInfo"in e){const t=e;this._updatingHandles.add(()=>t.elevationInfo,(o,g)=>{H(o,g)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})}this._set("initializePromise",this._initializeAsync()),this._updatingHandles.addPromise(this.initializePromise)}async _initializeAsync(){try{await this.graphicsCore.initializePromise}catch(e){if(w(e))return;throw e}this.destroyed||(this.addHandles(u(()=>this.view.clippingArea,()=>this._updateClippingExtent(),V)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",c(this.frustumVisibility)),this._set("graphicsCore",c(this.graphicsCore))}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get scaleVisibilitySuspended(){return!(this.scaleVisibility==null||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return this.frustumVisibility!=null&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){return!!(this.graphicsCore?.updating||this.scaleVisibility!=null&&this.scaleVisibility.updating||this.frustumVisibility!=null&&this.frustumVisibility.updating||this._updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}getRenderingInfo(e,i,l){const n=v(e,{renderer:i,arcade:l});if(n?.color){const t=n.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255}return n}getRenderingInfoAsync(e,i,l,n){return E(e,{renderer:i,arcade:l,...n})}getHit(e){if(this.owner.loadedGraphics){const i=this.owner.loadedGraphics.find(l=>l.uid===e);if(i){const l=this.layer instanceof S?this.layer:null,n=_(i,l);return{type:"graphic",graphic:n,layer:n.layer}}}return null}whenGraphicBounds(e,i){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(e,i):Promise.reject()}computeAttachmentOrigin(e,i){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(e,i):null}getSymbolLayerSize(e,i){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(e,i):null}maskOccludee(e){const i=this.graphicsCore?.objectStates;if(!i)return p();const{set:l,handle:n}=i.acquireSet(h.MaskOccludee,null);return i.setUid(l,e.uid),n}highlight(e){const i=this.graphicsCore?.objectStates;if(!i)return p();if(e instanceof x)return y;if(typeof e=="number")return this.highlight([e]);if(e instanceof d)return this.highlight([e]);if(e instanceof O&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof d){const l=e.map(o=>o.uid),{set:n,handle:t}=i.acquireSet(h.Highlight,null);return i.setUids(n,l),t}if(typeof e[0]=="number"){const l=e,{set:n,handle:t}=i.acquireSet(h.Highlight,null);return i.setObjectIds(n,l),t}}return y}_setupSuspendResumeExtent(){const{scaleVisibility:e,frustumVisibility:i}=this;if(e==null&&i==null)return;const l=({computedExtent:n,extentPadding:t})=>{this._suspendResumeExtent=A(n,this._suspendResumeExtent,$,t),e?.setExtent(this._suspendResumeExtent),i?.setExtent(this._suspendResumeExtent)};this.addHandles(u(()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding}),n=>l(n),G))}_updateClippingExtent(){const e=this.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}};r([a()],s.prototype,"type",void 0),r([a({constructOnly:!0})],s.prototype,"owner",void 0),r([a()],s.prototype,"layer",null),r([a()],s.prototype,"view",null),r([a({constructOnly:!0})],s.prototype,"graphicsCore",void 0),r([a()],s.prototype,"scaleVisibility",null),r([a({constructOnly:!0})],s.prototype,"frustumVisibility",void 0),r([a()],s.prototype,"elevationAlignment",null),r([a()],s.prototype,"scaleVisibilitySuspended",null),r([a({readOnly:!0})],s.prototype,"frustumVisibilitySuspended",null),r([a()],s.prototype,"suspended",null),r([a({readOnly:!0})],s.prototype,"updating",null),r([a()],s.prototype,"loadedGraphics",null),r([a()],s.prototype,"fullOpacity",null),r([a()],s.prototype,"slicePlaneEnabled",null),r([a()],s.prototype,"drapeSourceType",void 0),r([a()],s.prototype,"updatePolicy",null),r([a({constructOnly:!0})],s.prototype,"scaleVisibilityEnabled",void 0),r([a({constructOnly:!0})],s.prototype,"frustumVisibilityEnabled",void 0),r([a()],s.prototype,"initializePromise",void 0),s=r([P("esri.views.3d.layers.graphics.GraphicsProcessor")],s);const y=p();export{s as O};
