import{cu as B,hi as J,g4 as O,av as T,cB as D,aF as H,k9 as Q,ka as V,bX as W,dH as _,bQ as U,hV as S,aL as E,al as z,hU as G,at as K}from"./index-cc5260cc.js";import{r as F,o as I,i as b,s as X}from"./normalizeUtilsCommon-c508a8dd.js";async function Y(e,s,c,n){const t=B(e),f=s[0].spatialReference,l={...n,responseType:"json",query:{...t.query,f:"json",sr:J(f),target:JSON.stringify({geometryType:O(s[0]),geometries:s}),cutter:JSON.stringify(c)}},o=await T(t.path+"/cut",l),{cutIndexes:u,geometries:m=[]}=o.data;return{cutIndexes:u,geometries:m.map(h=>{const x=D(h);return x.spatialReference=f,x})}}async function Z(e,s,c){const n=typeof e=="string"?H(e):e,t=s[0].spatialReference,f=O(s[0]),l={...c,query:{...n.query,f:"json",sr:J(t),geometries:JSON.stringify(Q(s))}},{data:o}=await T(n.path+"/simplify",l);return V(o.geometries,f,t)}const C=()=>E.getLogger("esri.geometry.support.normalizeUtils");function ee(e){return e.type==="polygon"}function te(e){return e[0].type==="polygon"}function se(e){return e[0].type==="polyline"}function ne(e,s){if(!(e instanceof U||e instanceof z)){const t="straightLineDensify: the input geometry is neither polyline nor polygon";throw C().error(t),new K(t)}const c=I(e),n=[];for(const t of c){const f=[];n.push(f),f.push([t[0][0],t[0][1]]);for(let l=0;l<t.length-1;l++){const o=t[l][0],u=t[l][1],m=t[l+1][0],h=t[l+1][1],x=Math.sqrt((m-o)*(m-o)+(h-u)*(h-u)),a=(h-u)/x,d=(m-o)/x,p=x/s;if(p>1){for(let N=1;N<=p-1;N++){const j=N*s,r=d*j+o,i=a*j+u;f.push([r,i])}const w=(x+Math.floor(p-1)*s)/2,L=d*w+o,P=a*w+u;f.push([L,P])}f.push([m,h])}}return ee(e)?new z({rings:n,spatialReference:e.spatialReference}):new U({paths:n,spatialReference:e.spatialReference})}function k(e,s,c){if(s){const n=ne(e,1e6);e=G(n,!0)}return c&&(e=X(e,c)),e}function v(e,s,c){if(Array.isArray(e)){const n=e[0];if(n>s){const t=b(n,s);e[0]=n+t*(-2*s)}else if(n<c){const t=b(n,c);e[0]=n+t*(-2*c)}}else{const n=e.x;if(n>s){const t=b(n,s);e=e.clone().offset(t*(-2*s),0)}else if(n<c){const t=b(n,c);e=e.clone().offset(t*(-2*c),0)}}return e}function oe(e,s){let c=-1;for(let n=0;n<s.cutIndexes.length;n++){const t=s.cutIndexes[n],f=s.geometries[n],l=I(f);for(let o=0;o<l.length;o++){const u=l[o];u.some(m=>{if(m[0]<180)return!0;{let h=0;for(let a=0;a<u.length;a++){const d=u[a][0];h=d>h?d:h}h=Number(h.toFixed(9));const x=-360*b(h,180);for(let a=0;a<u.length;a++){const d=f.getPoint(o,a);f.setPoint(o,a,d.clone().offset(x,0))}return!0}})}if(t===c){if(te(e))for(const o of I(f))e[t]=e[t].addRing(o);else if(se(e))for(const o of I(f))e[t]=e[t].addPath(o)}else c=t,e[t]=f}return e}async function re(e,s,c){if(!Array.isArray(e))return re([e],s);s&&typeof s!="string"&&C().warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const n=typeof s=="string"?s:s?.url??W.geometryServiceUrl;let t,f,l,o,u,m,h,x,a=0;const d=[],p=[];for(const r of e)if(r!=null)if(t||(t=r.spatialReference,f=_(t),l=t.isWebMercator,m=l?102100:4326,o=F[m].maxX,u=F[m].minX,h=F[m].plus180Line,x=F[m].minus180Line),f)if(r.type==="mesh")p.push(r);else if(r.type==="point")p.push(v(r.clone(),o,u));else if(r.type==="multipoint"){const i=r.clone();i.points=i.points.map(y=>v(y,o,u)),p.push(i)}else if(r.type==="extent"){const i=r.clone()._normalize(!1,!1,f);p.push(i.rings?new z(i):i)}else if(r.extent){const i=r.extent,y=b(i.xmin,u)*(2*o);let $=y===0?r.clone():X(r.clone(),y);i.offset(y,0);let{xmin:R,xmax:g}=i;R=Number(R.toFixed(9)),g=Number(g.toFixed(9)),i.intersects(h)&&g!==o?(a=g>a?g:a,$=k($,l),d.push($),p.push("cut")):i.intersects(x)&&R!==u?(a=g*(2*o)>a?g*(2*o):a,$=k($,l,360),d.push($),p.push("cut")):p.push($)}else p.push(r.clone());else p.push(r);else p.push(r);let w=b(a,o),L=-90;const P=w,N=new U;for(;w>0;){const r=360*w-180;N.addPath([[r,L],[r,-1*L]]),L*=-1,w--}if(d.length>0&&P>0){const r=oe(d,await Y(n,d,N,c)),i=[],y=[];for(let g=0;g<p.length;g++){const M=p[g];if(M!=="cut")y.push(M);else{const A=r.shift(),q=e[g];q!=null&&q.type==="polygon"&&q.rings&&q.rings.length>1&&A.rings.length>=q.rings.length?(i.push(A),y.push("simplify")):y.push(l?S(A):A)}}if(!i.length)return y;const $=await Z(n,i,c),R=[];for(let g=0;g<y.length;g++){const M=y[g];M!=="simplify"?R.push(M):R.push(l?S($.shift()):$.shift())}return R}const j=[];for(let r=0;r<p.length;r++){const i=p[r];if(i!=="cut")j.push(i);else{const y=d.shift();j.push(l===!0?S(y):y)}}return j}export{re as R};
