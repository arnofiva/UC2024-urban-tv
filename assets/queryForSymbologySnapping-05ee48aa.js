import{bT as $,iO as O,iP as P,ay as C,fC as q,iQ as E,iR as G,iS as T,fq as A,iT as B,eo as H,dK as J}from"./index-75797708.js";async function N(t,d,l,b,o){const{elevationProvider:p,renderCoordsHelper:r}=t,{elevationInfo:f}=d,{pointsInFeatures:m,spatialReference:u}=b,g=$.fromJSON(u),h=O(f,!0),y=await P(h,g,o);C(o);const c=[],e=new Set,s=new Set,a=new A,n=q(0,0,0,$.WGS84),i=new B,w=H();n.spatialReference=g;const D=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:R,points:v}of m){const I=l(R);if(I==null){for(const S of v)c.push(S.z??0);e.add(R);continue}I.isDraped&&s.add(R);const j=I.graphic.geometry;a.setFromElevationInfo(E(j,f)),a.updateFeatureExpressionInfoContext(y,I.graphic,d);for(const{x:S,y:z,z:F}of v)n.x=S,n.y=z,n.z=F??0,await G(n,w,D,0,{signal:o}),T(w,p,a,r,i),c.push(i.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function Q(t,d,l){if(t==null||d.candidates.length===0)return x;const b=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],p=[],{renderer:r}=t,f=r!=null&&"arcadeRequired"in r&&r.arcadeRequired?J():null,m=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await f,i=await t.getRenderingInfoAsync(s,r,n,{signal:l});return i==null?[]:a.queryForSnapping(e,g,i,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const s=u[e],{objectId:a}=s,n=typeof a=="number"?b?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:i}=n;i.symbologySnappingSupported&&(o.push(m(s,n)),p.push(e))}if(o.length===0)return x;const h=await Promise.all(o);C(l);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{N as m,Q as r};
