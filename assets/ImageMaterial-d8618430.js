import{kc as T,kd as $,ke as I,fi as p,kf as c,kg as O,kh as A,ki as S,kj as b,kk as l,kl as C,km as w,kn as u,ko as x,ax as D,kp as N,kq as k,aj as i,kr as o,ks as m,kt as R,ku as L,kv as V,kw as F,kx as M,ky as U,kz as B,kA as j,kB as z,kC as G,kD as W,kE as H,kF as q,kG as Q,kH as J,kI as K,kJ as g,kK as y,kL as P,kM as X,kN as Y,kO as Z,kP as ee,kQ as te,kR as se,kS as ae,kT as re,kU as ie}from"./index-b9c5f9ae.js";function oe(s){const e=new T,{vertex:t,fragment:a}=e;return $(t,s),e.include(I,s),e.attributes.add(p.POSITION,"vec3"),e.attributes.add(p.UV0,"vec2"),s.perspectiveInterpolation&&e.attributes.add(p.PERSPECTIVEDIVIDE,"float"),e.varyings.add("vpos","vec3"),s.multipassEnabled&&e.varyings.add("depth","float"),t.code.add(c`
    void main(void) {
      vpos = position;
      ${s.multipassEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0;
      gl_Position = transformPosition(proj, view, vpos);

      ${s.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}
    }
  `),e.include(O,s),e.include(A,s),a.uniforms.add(new S("tex",n=>n.texture),new b("opacity",n=>n.opacity)),e.varyings.add("vTexCoord","vec2"),s.transparencyPassType===l.ColorAlpha&&(e.outputs.add("fragColor","vec4",0),e.outputs.add("fragAlpha","float",1)),a.include(C),a.code.add(c`
    void main() {
      discardBySlice(vpos);
      ${s.multipassEnabled?"terrainDepthTest(depth);":""}
      fragColor = texture(tex, vTexCoord) * opacity;

      if (fragColor.a < ${c.float(w)}) {
        discard;
      }

      fragColor = highlightSlice(fragColor, vpos);
      ${s.transparencyPassType===l.ColorAlpha?c`
              fragColor = premultiplyAlpha(fragColor);
              fragAlpha = fragColor.a;`:""}
      ${s.output===u.ObjectAndLayerIdColor?c`
              fragColor = vec4(0,0,0,1);`:""}
    }
    `),e}const ne=Object.freeze(Object.defineProperty({__proto__:null,build:oe},Symbol.toStringTag,{value:"Module"}));class _ extends R{initializeProgram(e){return new L(e.rctx,_.shader.get().build(this.configuration),E)}_setPipelineState(e,t){const a=this.configuration,n=e===l.NONE,d=e===l.FrontFace;return V({blending:a.output===u.Color&&a.transparent?n?pe:F(e):null,culling:M(a.cullFace),depthTest:{func:U(e)},depthWrite:n?a.writeDepth?B:null:j(e),drawBuffers:z(e),colorWrite:G,stencilWrite:a.hasOccludees?W:null,stencilTest:a.hasOccludees?t?H:q:null,polygonOffset:n||d?null:Q(a.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}_.shader=new x(ne,()=>D(()=>import("./ImageMaterial.glsl-081e31ef.js"),["./ImageMaterial.glsl-081e31ef.js","./index-b9c5f9ae.js","./index-e15ba190.css"],import.meta.url));const pe=N(k.ONE,k.ONE_MINUS_SRC_ALPHA);class r extends J{constructor(){super(...arguments),this.output=u.Color,this.cullFace=m.None,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=l.NONE,this.multipassEnabled=!1,this.cullAboveGround=!1,this.perspectiveInterpolation=!0}}i([o({count:u.COUNT})],r.prototype,"output",void 0),i([o({count:m.COUNT})],r.prototype,"cullFace",void 0),i([o()],r.prototype,"hasSlicePlane",void 0),i([o()],r.prototype,"transparent",void 0),i([o()],r.prototype,"enableOffset",void 0),i([o()],r.prototype,"writeDepth",void 0),i([o()],r.prototype,"hasOccludees",void 0),i([o({count:l.COUNT})],r.prototype,"transparencyPassType",void 0),i([o()],r.prototype,"multipassEnabled",void 0),i([o()],r.prototype,"cullAboveGround",void 0),i([o()],r.prototype,"perspectiveInterpolation",void 0),i([o({constValue:!1})],r.prototype,"occlusionPass",void 0);const E=new Map([[p.POSITION,0],[p.UV0,2],[p.PERSPECTIVEDIVIDE,3]]);let he=class extends K{constructor(e){super(e,new ue),this.supportsEdges=!0,this.produces=new Map([[g.OPAQUE_MATERIAL,t=>y(t)||P(t)&&!this.parameters.transparent],[g.TRANSPARENT_MATERIAL,t=>P(t)&&this.parameters.transparent&&this.parameters.writeDepth],[g.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,t=>P(t)&&this.parameters.transparent&&!this.parameters.writeDepth],[g.DRAPED_MATERIAL,t=>P(t)||y(t)]]),this._vertexAttributeLocations=E,this._configuration=new r}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.enableOffset=t.camera.relativeElevation<X,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}createGLMaterial(e){return new le(e)}createBufferWriter(){const e=Y.clone();return this.parameters.perspectiveInterpolation&&e.f32(p.PERSPECTIVEDIVIDE),new ce(e)}};class le extends Z{constructor(e){super({...e,...e.material.parameters})}_updateParameters(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(_,e)}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&(this._material.setParameters({hasOccludees:e.hasOccludees}),this._updateParameters(e))}beginSlot(e){return this._output===u.Color&&this._updateOccludeeState(e),this._updateParameters(e)}}class ce extends ee{write(e,t,a,n,d){for(const h of this.vertexBufferLayout.fields.keys()){const f=a.attributes.get(h);if(f)if(h===p.PERSPECTIVEDIVIDE){te(f.size===1);const v=n.getField(h,se);v&&ae(f,v,d)}else re(h,f,e,t,n,d)}}}class ue extends ie{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=m.None,this.hasOccludees=!1,this.opacity=1,this.textureId=null,this.initTextureTransparent=!0,this.perspectiveInterpolation=!1}}export{he as g,oe as v};
