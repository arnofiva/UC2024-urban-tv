import{ax as Ie,gB as Pe,gT as Ge,gU as Se,aQ as me,bS as fe,at as ee,aL as O,ga as Le,g2 as W,ay as He,bH as Oe,bP as Ce,bQ as ke,aj as v,ak as A,am as $e,aB as Be}from"./index-b9c5f9ae.js";import{M as Ue,h as Fe,a as le,w as _,b as te,c as ae,D as w,I as ze}from"./KnowledgeGraphSublayer-1170e3a7.js";import{R as Qe}from"./knowledgeGraphService-f066f426.js";import"./UniqueValueRenderer-7b7c2094.js";import"./ColorStop-3fcdc0d6.js";import"./diffUtils-8f72b702.js";import"./colorRamps-4e691737.js";import"./jsonUtils-a21420ee.js";import"./FieldsIndex-0939f6d2.js";import"./UnknownTimeZone-25b10fba.js";import"./heatmapUtils-aa7c68b3.js";import"./FeatureStore-4ad62b24.js";import"./BoundsStore-315742f7.js";import"./PooledRBush-73842d9a.js";import"./quickselect-43e2d66b.js";import"./QueryEngine-da2f83e0.js";import"./normalizeUtils-512dfd53.js";import"./normalizeUtilsCommon-050bf0c4.js";import"./WhereClause-061880b7.js";import"./TimeOnly-6b0b4a91.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-30b20cb3.js";import"./utils-1637909e.js";import"./utils-a7cc7030.js";import"./ClassBreaksDefinition-c6a7e60d.js";import"./optimizedFeatureQueryEngineAdapter-45806bd8.js";import"./clientSideDefaults-87217262.js";import"./Relationship-661a794c.js";import"./fieldProperties-d37fa804.js";import"./FeatureEffectLayer-b2ab121f.js";import"./FeatureEffect-72786df8.js";import"./FeatureFilter-cd09ce2a.js";import"./FeatureReductionLayer-14f53a39.js";import"./layerContainerType-e1118fe6.js";import"./FeatureReductionSelection-321ddf29.js";import"./commonProperties-8243c624.js";import"./labelingInfo-db972526.js";import"./featureQueryAll-129e8c41.js";import"./RelationshipQuery-cee87a2d.js";import"./MD5-715f37cd.js";import"./OrderedLayer-59c0368b.js";import"./RefreshableLayer-74f8ddcc.js";import"./TemporalLayer-bdda8baf.js";import"./TimeInfo-2a4cf537.js";import"./FeatureSet-0bdd79f0.js";import"./popupUtils-f8491b19.js";var ie;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absoluteValue"})(ie||(ie={}));let he,c=null;function je(){return he||(he=Ie(()=>import("./lclayout-b869f81f.js"),["./lclayout-b869f81f.js","./index-b9c5f9ae.js","./index-e15ba190.css"],import.meta.url).then(e=>e.l).then(({default:e})=>e({locateFile:a=>Pe(`esri/libs/linkchartlayout/${a}`)})).then(e=>{Ye(e)}),he)}function Ye(e){c=e}var $,ne;function j(e,a,s,t,i,n){const o=s.length,d=i.length,g=Float64Array.BYTES_PER_ELEMENT,f=Uint32Array.BYTES_PER_ELEMENT,m=Uint8Array.BYTES_PER_ELEMENT,y=16,D=y+o*(m+2*g)+d*(2*f),x=c._malloc(D);try{const h=x+y-x%y,k=h+o*g,L=k+o*g,b=L+d*f,I=b+d*f,p=()=>[c.HEAPF64.subarray(h>>3,(h>>3)+o),c.HEAPF64.subarray(k>>3,(k>>3)+o),c.HEAPU32.subarray(L>>2,(L>>2)+d),c.HEAPU32.subarray(b>>2,(b>>2)+d),c.HEAPU8.subarray(I,I+o)],[R,F,B,z,U]=p();R.set(s),F.set(t),B.set(i),z.set(n),U.set(a);let S=e(o,I,h,k,d,L,b),M=null,P=null;if(S){const l=c.getLayoutLinksTypes(),N=c.getLayoutLinksVerticesEndIndices(),H=c.getLayoutLinksVertices(),E=c.countLayoutLinksVertices();!d||l&&N?E&&!H?S=!1:(M={types:new Uint8Array(c.HEAPU8.subarray(l,l+d)),vertexEndIndex:new Uint32Array(c.HEAPU32.subarray(N>>2,(N>>2)+d)),vertices:new Float64Array(c.HEAPF64.subarray(H>>3,(H>>3)+2*E))},P=c.getAuxiliaryGraphicElements()):S=!1}const[q,J,K,r,u]=p();return s.set(q),t.set(J),i.set(K),n.set(r),a.set(u),{success:S,links:M,graphics:P}}finally{c._free(x),c.cleanupLayout()}}(function(e){e[e.None=0]="None",e[e.IsMovable=1]="IsMovable",e[e.IsGeographic=2]="IsGeographic",e[e.IsRoot=4]="IsRoot"})($||($={})),function(e){e[e.Regular=0]="Regular",e[e.Orthogonal=1]="Orthogonal",e[e.Curved=2]="Curved",e[e.Recursive=3]="Recursive"}(ne||(ne={}));const Me=2,be=1,Ee=-1;var ue,pe,de,ce,ye,ge,we,Te,De;(function(e){function a(){return c.getMinIdealEdgeLength()}function s(t,i,n,o,d,g=Me,f=be,m=Ee){return j((y,D,x,h,k,L,b)=>c.applyForceDirectedLayout(y,D,x,h,k,L,b,g,f,m),t,i,n,o,d)}e.getMinIdealEdgeLength=a,e.apply=s})(ue||(ue={})),function(e){function a(s,t,i,n,o,d=Me,g=be,f=Ee){return j((m,y,D,x,h,k,L)=>c.applyCommunityLayout(m,y,D,x,h,k,L,d,g,f),s,t,i,n,o)}e.apply=a}(pe||(pe={})),function(e){function a(s,t,i,n,o){return j(c.applySimpleLayout,s,t,i,n,o)}e.apply=a}(de||(de={})),function(e){function a(s,t,i,n,o){return j(c.applyHierarchicalLayout,s,t,i,n,o)}e.apply=a}(ce||(ce={})),function(e){function a(s,t,i,n,o){return j(c.applyRadialTreeLayout,s,t,i,n,o)}e.apply=a}(ye||(ye={})),function(e){function a(s,t,i,n,o){return j(c.applySmartTreeLayout,s,t,i,n,o)}e.apply=a}(ge||(ge={})),function(e){function a(s,t,i,n,o,d,g,f,m){return j((y,D,x,h,k,L,b)=>{if(n.length!==y||o.length!==y||f.length!==k||m.length!==k)return!1;const I=Float64Array.BYTES_PER_ELEMENT,p=16,R=c._malloc(p+y*I),F=c._malloc(p+y*I),B=c._malloc(p+k*I),z=c._malloc(p+k*I),U=R+p-R%p,S=F+p-F%p,M=B+p-B%p,P=z+p-z%p;try{return c.HEAPF64.subarray(U>>3,(U>>3)+y).set(n),c.HEAPF64.subarray(S>>3,(S>>3)+y).set(o),c.HEAPF64.subarray(M>>3,(M>>3)+k).set(f),c.HEAPF64.subarray(P>>3,(P>>3)+k).set(m),c.applyChronologicalLayout(y,D,x,h,U,S,k,L,b,M,P)}finally{c._free(R),c._free(F),c._free(B),c._free(z)}},s,t,i,d,g)}e.apply=a}(we||(we={})),function(e){e[e.Undirected=0]="Undirected",e[e.Directed=1]="Directed",e[e.Reversed=2]="Reversed"}(Te||(Te={})),function(e){e[e.ByCC_Raw=0]="ByCC_Raw",e[e.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",e[e.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(De||(De={}));let T=class extends Ge(Se(Be)){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new me,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new fe({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new me,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new ee("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const n=this.url.split("/");this.title=n[n.length-2]}const a=new Set;let s=[],t=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new ee("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach(n=>{n.name&&this._graphTypeLookup.set(n.name,n)}),e.knowledgeGraph.dataModel.relationshipTypes?.forEach(n=>{n.name&&this._graphTypeLookup.set(n.name,n)}),e.inclusionModeDefinition?.generateAllSublayers?(s=e.knowledgeGraph.dataModel.entityTypes??[],t=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach((n,o)=>{const d=this._graphTypeLookup.get(o);if(!d)return O.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(o);d.type==="relationship"?a.has(o)||(a.add(o),t.push(d)):d.type==="entity"?a.has(o)||(a.add(o),s.push(d)):(O.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(o))}):(s=e.knowledgeGraph.dataModel.entityTypes??[],t=e.knowledgeGraph.dataModel.relationshipTypes??[]);const i=new Ue({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=s,this.memberRelationshipTypes=t,this.dataManager=i}load(e){return this.addResolvingPromise(new Promise(a=>{Qe(this.url).then(s=>{if(this._initializeLayerProperties({knowledgeGraph:s,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(t=>{t.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(t.name,{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(t=>{t.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(t.name,{useAllData:!0})})),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(t=>{t.useAllData=!1,t.members?.forEach(i=>{let n;n=i.linkChartLocation instanceof Le?i.linkChartLocation:i.linkChartLocation?W(i.linkChartLocation):null,n&&n.coords.length===2&&n.lengths.length===0?this.entityLinkChartDiagramLookup.set(i.id,n):this.relationshipLinkChartDiagramLookup.set(i.id,n)}),this.addResolvingPromise(this._initializeDiagram().then(async()=>{this.layers.forEach(async i=>{await i.refreshCachedQueryEngine()}),this.tables.forEach(async i=>{await i.refreshCachedQueryEngine()})}))});else{const t=this.defaultLinkChartConfig?.layoutMode==="GEOGRAPHIC";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then(async()=>{He(e);const i=[],n=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach(o=>{o.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach(o=>{n.push(o.refreshCachedQueryEngine()),i.push(new Promise(d=>{o.on("layerview-create",()=>{d(null)})}))}),this.tables.forEach(o=>{n.push(o.refreshCachedQueryEngine())}),await Promise.all(n)}))}a(null)})})),Promise.resolve(this)}async addRecords(e,a){let s=[];a?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(s=await Fe(e,this.dataManager.knowledgeGraph));const t=e.concat(s).filter(i=>!this.sublayerIdsCache.get(i.typeName)?.has(i.id));await this._handleNewRecords(t)}async removeRecords(e,{cascadeRemoveRelationships:a=!0,recalculateLayout:s=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let t=[];for(const n of e)this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(n.typeName)?.useAllData===!1&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(n.typeName)?.members?.has(n.id)&&t.push(n);if(a){const n=new Set,o=[];for(const d of t)if(this.dataManager.nodeConnectionsLookup.has(d.id))for(const g of this.dataManager.nodeConnectionsLookup.get(d.id))n.add(g);for(const d of n)if(this.dataManager.memberIdTypeLookup.has(d))for(const g of this.dataManager.memberIdTypeLookup.get(d))this.dataManager.relationshipTypeNames.has(g)&&o.push({id:d,typeName:g});t=t.concat(o)}this.dataManager.removeFromLayer(t);for(const n of t)this.sublayerIdsCache.get(n.typeName)?.delete(n.id),this.dataManager.relationshipTypeNames.has(n.typeName)?this.relationshipLinkChartDiagramLookup.delete(n.id):this.entityLinkChartDiagramLookup.delete(n.id);s&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const i=[];return this.layers.forEach(n=>{i.push(n.refreshCachedQueryEngine())}),await Promise.all(i),this._refreshNamedTypes(),t}async expand(e,a){const s=await this.dataManager.getConnectedRecordIds(e,a),t=s.filter(i=>!this.sublayerIdsCache.get(i.typeName)?.has(i.id));return await this._handleNewRecords(s),{records:t}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach(e=>{const a=new le({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});a.geometryType?this.layers.push(a):this.tables.push(a),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)}),this.memberEntityTypes.forEach(e=>{const a=new le({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});a.geometryType?this.layers.push(a):this.tables.push(a),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e,a)=>{const s=Oe(this.sublayerIdsCache,a,()=>new Set);e.members?.forEach(t=>{if(s.add(t.id),t.linkChartLocation)if(t.linkChartLocation instanceof Le)this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(t.id,t.linkChartLocation):this.entityLinkChartDiagramLookup.set(t.id,t.linkChartLocation);else{const i=W(t.linkChartLocation);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(t.id,t.linkChartLocation?i:null):this.entityLinkChartDiagramLookup.set(t.id,t.linkChartLocation?i:null)}})})}async calculateLinkChartLayout(e="RADIAL_TREE",a){const s=[],t=[],i=[];this.dataManager.sublayerCaches.forEach((r,u)=>{this.dataManager.entityTypeNames.has(u)?r.forEach(l=>{s.push({typeName:u,feature:l})}):this.dataManager.relationshipTypeNames.has(u)&&r.forEach(l=>{t.push({typeName:u,feature:l})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const n=new Map,o=new Map,d=new Map,g=new Map,f=new Uint8Array(s.length),m=new Float64Array(s.length),y=new Float64Array(s.length),D=new Uint32Array(t.length),x=new Uint32Array(t.length),h=[],k="FORCE_DIRECTED",L=new fe({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let b,I="FORCE_DIRECTED",p=0,R=0;switch(I=e==="GEOGRAPHIC"?k:e,I){case"FORCE_DIRECTED":b=ue.apply;break;case"COMMUNITY":b=pe.apply;break;case"HIERARCHICAL":b=ce.apply;break;case"RADIAL_TREE":b=ye.apply;break;case"SMART_TREE":b=ge.apply;break;default:b=de.apply}s.forEach(({typeName:r,feature:u})=>{if(a?.lockedNodeLocations?.has(u.attributes[_])){e==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(r)?f[p]=$.IsGeographic:f[p]=$.None;const l=a.lockedNodeLocations.get(u.attributes[_]);m[p]=l.x,y[p]=l.y}else if(e==="GEOGRAPHIC"&&this.dataManager.geographicLookup.has(r)){f[p]=$.IsGeographic;let l=null;const N=u.attributes[this.dataManager.geographicLookup.get(r).name];switch(this.dataManager.geographicLookup.get(r)?.geometryType){case"esriGeometryPoint":m[p]=N?.x,y[p]=N?.y;break;case"esriGeometryPolygon":l=N?.centroid,l?.x!=null&&l?.y!=null?(m[p]=l.x,y[p]=l.y):f[p]=$.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":l=N?.extent?.center,l?.x!=null&&l?.y!=null?(m[p]=l.x,y[p]=l.y):f[p]=$.IsMovable;break;default:f[p]=$.IsMovable}(m[p]==null||y[p]==null||Number.isNaN(m[p])||Number.isNaN(y[p]))&&(f[p]=$.IsMovable,m[p]=0,y[p]=0)}else f[p]=$.IsMovable,m[p]=0,y[p]=0;g.set(u.attributes[_],p),h[p]={feature:u,typeName:r},p++});let F=!1;const B=new Map;t.forEach(r=>{const u=r.feature.attributes[te],l=r.feature.attributes[ae],N=g.get(u),H=g.get(l);if(N!==void 0&&H!==void 0){const E=u+"-"+l,G=B.get(E);G?.has(r.typeName)||(D[R]=N,x[R]=H,G===void 0?B.set(E,new Map([[r.typeName,R]])):G.set(r.typeName,R),R++),i.push(r)}else F=!0,this.relationshipLinkChartDiagramLookup.set(u,null)}),F&&O.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const z=this._validateLayoutSettings(e,a),U=this._convertLayoutSettingsToCalculationSettings(z);await je();const{success:S,links:M}=b(f,m,y,D.subarray(0,R),x.subarray(0,R),U.computationBudgetTime,U.idealEdgeLengthMultiplier,U.repulsionRadiusMultiplier);if(!S)throw new ee("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let r=0;r<h.length;r++){if(y[r]>84.9999?y[r]=84.9999:y[r]<-84.9999&&(y[r]=-84.9999),m[r]>179.9999?m[r]=179.9999:m[r]<-179.9999&&(m[r]=-179.9999),h[r].feature.attributes[w]=new Ce(m[r],y[r]),n.has(h[r].typeName))n.get(h[r].typeName)?.set(h[r].feature.attributes[_],h[r].feature);else{const l=new Map;l.set(h[r].feature.attributes[_],h[r].feature),n.set(h[r].typeName,l)}d.set(h[r].feature.attributes[_],h[r].feature);const u=W(h[r].feature.attributes[w]);this.entityLinkChartDiagramLookup.set(h[r].feature.attributes[_],h[r].feature.attributes[w]?u:null),h[r].feature.attributes[w].x<L.xmin&&(L.xmin=h[r].feature.attributes[w].x),h[r].feature.attributes[w].x>L.xmax&&(L.xmax=h[r].feature.attributes[w].x),h[r].feature.attributes[w].y<L.ymin&&(L.ymin=h[r].feature.attributes[w].y),h[r].feature.attributes[w].y>L.ymax&&(L.ymax=h[r].feature.attributes[w].y)}if(this.linkChartExtent.xmin=L.xmin,this.linkChartExtent.xmax=L.xmax,this.linkChartExtent.ymin=L.ymin,this.linkChartExtent.ymax=L.ymax,!M)throw new ee("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const P=new Map,q=new Map,J=new Map,K=new Set;for(let r=0;r<i.length;r++){const u=[],l=i[r],N=l.feature.attributes[te],H=l.feature.attributes[ae],E=N+"-"+H,G=B.get(E).get(l.typeName),Y=G===0?0:M?.vertexEndIndex[G-1];if(!K.has(G)){if(K.add(G),M.types[G]===ne.Recursive){const C=[M.vertices[2*Y],M.vertices[2*Y+1]],oe=[M.vertices[2*(Y+1)],M.vertices[2*(Y+1)+1]],V=[.5*(C[0]+oe[0]),.5*(C[1]+oe[1])],Z=[V[0]-C[0],V[1]-C[1]],Ae=[V[0]+Z[1],V[1]-Z[0]],_e=[V[0]-Z[1],V[1]+Z[0]];u.push(C),u.push(Ae),u.push(oe),u.push(_e),u.push(C)}else{if(M.types[G]!==ne.Regular){O.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let C=Y;C<M.vertexEndIndex[G];C++)u.push([M.vertices[2*C],M.vertices[2*C+1]])}const Q=h[g.get(N)]?.feature.attributes[w],X=h[g.get(H)]?.feature.attributes[w];u[0][0]===Q.x&&u[0][1]===Q.y||(u[0]=[Q.x,Q.y]),u[u.length-1][0]===X.x&&u[u.length-1][1]===X.y||(u[u.length-1]=[X.x,X.y]);for(let C=1;C<u.length-1;C++)u[C][1]>85.5?u[C][1]=85.5:u[C][1]<-85.5&&(u[C][1]=-85.5),u[C][0]>179.9999?u[C][0]=179.9999:u[C][0]<-179.9999&&(u[C][0]=-179.9999);P.has(E)?P.get(E).push(u):P.set(E,[u])}const xe=P.get(E);q.has(E)||(q.set(E,new Map),J.set(E,new Map));const se=q.get(E),re=J.get(E);se.has(l.typeName)||(se.set(l.typeName,xe.shift()),re.set(l.typeName,0));const Ne=se.get(l.typeName);re.set(l.typeName,re.get(l.typeName)+1);const ve=new ke({paths:Ne});if(l.feature.attributes[w]=ve,o.has(l.typeName))o.get(l.typeName)?.set(l.feature.attributes[_],l.feature);else{const Q=new Map;Q.set(l.feature.attributes[_],l.feature),o.set(l.typeName,Q)}d.set(l.feature.attributes[_],l.feature);const Re=W(l.feature.attributes[w]);this.relationshipLinkChartDiagramLookup.set(l.feature.attributes[_],l.feature.attributes[w]?Re:null)}for(const r of i)r.feature.attributes[ze]=J.get(r.feature.attributes[te]+"-"+r.feature.attributes[ae])?.get(r.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutOptions:z},{nodes:n,links:o,idMap:d}}async applyNewLinkChartLayout(e="RADIAL_TREE",a){const s=[];await this.calculateLinkChartLayout(e,a),this.layers.forEach(t=>{s.push(t.refreshCachedQueryEngine())}),await Promise.all(s),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(a=>{a?.members?.forEach(s=>{const t=s.linkChartLocation;let i;const n=s.id;t&&(i="x"in t?{x:t.x,y:t.y}:{x:t.coords[0],y:t.coords[1]},e.set(n,new Ce({x:i.x,y:i.y})))})}),e}async synchronizeInclusionListWithCache(){return new Promise(e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((a,s)=>{if(a.useAllData=!1,a.members&&a.members.size>0){if(!this.dataManager.sublayerCaches.get(s))return;const t=new Set(Array.from(this.dataManager.sublayerCaches.get(s).keys()));Array.from(a.members.keys()).filter(i=>!t.has(i)).forEach(i=>{a.members?.delete(i)})}}),e()})}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const a=[];this.layers.forEach(s=>{a.push(s.refreshCachedQueryEngine())}),await Promise.all(a),this._refreshNamedTypes()}async connectEntities(e){let a=[];for(const t of this.dataManager.relationshipTypeNames){const i=this.sublayerIdsCache.get(t);i&&(a=a.concat(Array.from(i.keys())))}const s=await this.dataManager.getAttachedRelationships(e,a);return await this._handleNewRecords(s),{records:s}}async _handleNewRecords(e){const a=[];this.dataManager.addToLayer(e);for(const t of e)this.sublayerIdsCache.has(t.typeName)||(this.sublayerIdsCache.set(t.typeName,new Set),a.push(t.typeName)),this.sublayerIdsCache.get(t.typeName).add(t.id);for(const t of a){const i=this._graphTypeLookup.get(t);if(i){const n=new le({objectType:i,parentCompositeLayer:this,graphType:i.type,title:t});i.type==="entity"?this.dataManager.entityTypeNames.add(t):this.dataManager.relationshipTypeNames.add(t),n.geometryType?this.layers.push(n):this.tables.push(n),this.dataManager.sublayerCaches.set(t,new Map)}}await this.dataManager.refreshCacheContent(e.map(t=>t.id));const s=Object.assign({},this._currentLinkChartConfig.layoutOptions);s.lockedNodeLocations=this.getCurrentNodeLocations(),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,s)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e,a)=>{e?.members?.forEach(s=>{const t=s.linkChartLocation;let i;const n=s.id;if(!t)return;i="x"in t?{x:t.x,y:t.y}:{x:t.coords[0],y:t.coords[1]};const o=W(i);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(n,o):this.entityLinkChartDiagramLookup.set(n,o),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)})}),this.memberRelationshipTypes.forEach(e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach(a=>{const s=this.relationshipLinkChartDiagramLookup.get(a.attributes[te]),t=this.relationshipLinkChartDiagramLookup.get(a.attributes[ae]);if(s&&t){const i=W(new ke({paths:[[s.coords[0],s.coords[1]],[t.coords[0],t.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(a.attributes[_],i)}else this.relationshipLinkChartDiagramLookup.set(a.attributes[_],null)})})):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(e,a){const s=h=>typeof h=="number"&&!isNaN(h),t=h=>s(h)&&h>=1,i=h=>s(h)&&h>=1,n=h=>Object.values(ie).includes(h),o=h=>s(h)&&h>=0,d=new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC"]),g={};if(!d.has(e)||!a)return!d.has(e)&&a&&O.getLogger(this).warn("Layout mode options were given for a layout mode that does not utilize them, settings will be ignored"),g;const{computationBudgetTime:f,repulsionRadiusMultiplier:m,idealEdgeLength:y,idealEdgeLengthType:D}=a;i(f)?g.computationBudgetTime=f:f!==void 0&&O.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),t(m)?g.repulsionRadiusMultiplier=m:m!==void 0&&O.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting");const x=y!==void 0||D!==void 0;return e!=="GEOGRAPHIC"&&x?O.getLogger(this).warn("Ideal edge length settings were specified for an incompatible layout mode, and will be ignored"):e==="GEOGRAPHIC"&&x&&(n(D)?g.idealEdgeLengthType=D:D!==void 0&&O.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),o(y)?g.idealEdgeLength=y:y!==void 0&&O.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),g}_convertLayoutSettingsToCalculationSettings(e){let a=e.idealEdgeLength;return e.idealEdgeLengthType===ie.ABSOLUTE&&(a===void 0?a=-1:a*=-1),{computationBudgetTime:e.computationBudgetTime,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:a}}};v([A()],T.prototype,"dataPreloadedInLocalCache",void 0),v([A()],T.prototype,"defaultLinkChartConfig",void 0),v([A()],T.prototype,"dataManager",void 0),v([A()],T.prototype,"knowledgeGraph",void 0),v([A()],T.prototype,"layers",void 0),v([A()],T.prototype,"entityLinkChartDiagramLookup",void 0),v([A()],T.prototype,"relationshipLinkChartDiagramLookup",void 0),v([A()],T.prototype,"linkChartExtent",void 0),v([A()],T.prototype,"memberEntityTypes",void 0),v([A()],T.prototype,"memberRelationshipTypes",void 0),v([A()],T.prototype,"sublayerIdsCache",void 0),v([A()],T.prototype,"tables",void 0),v([A({json:{read:!1}})],T.prototype,"type",void 0),T=v([$e("esri.layers.LinkChartLayer")],T);const Bt=T;export{Bt as default};
