import{gT as _,gU as S,ar as T,au as b,bT as v,aF as w,av as h,aw as O,h3 as $,at as u,aC as R,cK as U,gA as W,gh as j,aj as a,ak as o,az as P,bW as A,hq as B,am as L,aB as C}from"./index-cc5260cc.js";import{i as I}from"./APIKeyMixin-f0b323b6.js";import{p as M}from"./ArcGISCachedService-f31d7979.js";import{m as N,f as k,t as D}from"./SublayersOwner-2f5ac1ee.js";import{l as J}from"./ArcGISService-1e89e6ee.js";import{e as q}from"./CustomParametersMixin-022b66c4.js";import{b as G}from"./OperationalLayer-eea4a77f.js";import{j as V}from"./PortalLayer-cb90e0d1.js";import{f as E}from"./RefreshableLayer-79d78805.js";import{p as K}from"./commonProperties-cc82f359.js";import{o as y}from"./imageBitmapUtils-4b22107d.js";import"./TileInfoTilemapCache-c1e2420e.js";import"./TilemapCache-3fa08614.js";import"./UniqueValueRenderer-54c126a1.js";import"./ColorStop-e7316361.js";import"./diffUtils-b3bd11bb.js";import"./colorRamps-381886f3.js";import"./jsonUtils-d6eedba0.js";import"./FieldsIndex-fc537b48.js";import"./UnknownTimeZone-65f60a9d.js";import"./heatmapUtils-829de23b.js";import"./QueryTask-d8cd768a.js";import"./executeForIds-ed3d5661.js";import"./query-4ff9e65a.js";import"./normalizeUtils-41f60ca4.js";import"./normalizeUtilsCommon-c508a8dd.js";import"./pbfQueryUtils-c80ee5c0.js";import"./pbf-8a26872b.js";import"./queryZScale-f9bc9d46.js";import"./executeQueryJSON-f1090870.js";import"./FeatureSet-61e08bb9.js";import"./executeQueryPBF-f5e118ce.js";import"./labelingInfo-2649050a.js";import"./featureQueryAll-2e5a1e8f.js";import"./RelationshipQuery-5068e864.js";import"./FeatureType-b9b4fbb3.js";import"./FeatureTemplate-edc74dae.js";import"./LayerFloorInfo-82f1798b.js";import"./Relationship-f4eb2e1b.js";import"./serviceCapabilitiesUtils-31453300.js";import"./popupUtils-0f067087.js";import"./sublayerUtils-3619ac39.js";import"./layerContainerType-e1118fe6.js";var m;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=m=class extends _(S(N(M(k(G(V(J(T(E(I(q(C)))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(b).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&v.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(({sublayers:p})=>p&&p.toArray().reverse()).toArray(),l=[],c={writeSublayerStructure:!1,...s};n.forEach(p=>{const d=p.write({},c);l.push(d)}),l.some(p=>Object.keys(p).length>1)&&(r.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>w(r).path):null}fetchTile(e,r,t,s={}){const{signal:n}=s,l=this.getTileUrl(e,r,t),c={responseType:"image",signal:n,query:{...this.refreshParameters}};return h(l,c).then(p=>p.data)}async fetchImageBitmapTile(e,r,t,s={}){const{signal:n}=s;if(this.fetchTile!==m.prototype.fetchTile){const d=await this.fetchTile(e,r,t,s);return y(d,e,r,t,n)}const l=this.getTileUrl(e,r,t),c={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:p}=await h(l,c);return y(p,e,r,t,n)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,n=O({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${n?"?"+n:""}`}loadAll(){return $(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const s=R(this.parsedUrl.path);if(s!=null&&s.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");h(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!U(t))return this._fetchServerVersion(t,e).then(s=>{this.read({currentVersion:s})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!W(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return h(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(s=>{if(s.data&&s.data.currentVersion)return s.data.currentVersion;throw new u("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,s=f.length;t<s;t++)if(r=f[t],r.toLowerCase().includes(e))return j("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};a([o({readOnly:!0})],i.prototype,"attributionDataUrl",null),a([o({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),a([o({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),a([o({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),a([o({type:Boolean})],i.prototype,"resampling",void 0),a([o()],i.prototype,"sourceJSON",void 0),a([o({type:v})],i.prototype,"spatialReference",void 0),a([P("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),a([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),a([o({readOnly:!0})],i.prototype,"sublayers",void 0),a([A("sublayers",{layers:{type:[D]}})],i.prototype,"writeSublayers",null),a([o({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),a([o()],i.prototype,"tileServers",null),a([B("tileServers")],i.prototype,"castTileServers",null),a([o({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),a([o(K)],i.prototype,"url",void 0),i=m=a([L("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const Ie=i;export{Ie as default};
