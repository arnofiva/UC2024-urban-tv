import{aj as s,ak as r,am as l,d6 as C,aq as M,ao as _,gz as O,aR as g,aX as R,aN as k,at as G,bl as U}from"./index-75797708.js";import{o as $}from"./StreamFeatureManager-9aa9270f.js";import{createConnection as x}from"./createConnection-e8c0a969.js";import{h as T}from"./EventedSet-c2bd6307.js";import{C as V,u as E}from"./Graphics3DGraphicsPipeline-af85b47f.js";import{l as j}from"./LayerView3D-77681ce3.js";import{y as L}from"./LayerView-7059f1fc.js";import{d as N}from"./FeatureFilter-9d3ae08e.js";import"./query-dd3a3bae.js";import"./normalizeUtils-14f09049.js";import"./normalizeUtilsCommon-eecee6b6.js";import"./pbfQueryUtils-335efe71.js";import"./pbf-19f7cae1.js";import"./queryZScale-2c7fab80.js";import"./timeSupport-88508996.js";import"./projectExtentUtils-9d38f719.js";import"./dehydratedFeatureComparison-8bd8c536.js";import"./queryForSymbologySnapping-05ee48aa.js";import"./hash-6f442295.js";import"./diffUtils-0e3a2a24.js";import"./UniqueValueRenderer-e5955946.js";import"./ColorStop-6a565283.js";import"./colorRamps-aa93f22c.js";import"./Graphics3DObjectStates-d0fd362c.js";import"./jsonUtils-e39cab6d.js";import"./FieldsIndex-e68ff75c.js";import"./UnknownTimeZone-bc39bc88.js";import"./heatmapUtils-b63f4199.js";import"./optimizedFeatureQueryEngineAdapter-1aff7530.js";import"./PooledRBush-db11685a.js";import"./quickselect-0cb10df8.js";import"./popupUtils-0412893d.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-d004ff2d.js";import"./WhereClause-2da3dfba.js";import"./TimeOnly-1edcbdf2.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-fc6bc652.js";import"./utils-319bcf9e.js";import"./utils-78c11d9b.js";import"./ClassBreaksDefinition-077b81d9.js";import"./FeatureSet-285ce5c1.js";import"./FeatureStore-383f5c94.js";import"./BoundsStore-fd582c6d.js";const D=2500;let d=class extends R{constructor(t){super(t)}getObjectId(){return this.objectId}};s([r({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=s([l("esri.layers.graphics.controllers.StreamController.StreamGraphic")],d);class F{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const i=this._idToGraphic.get(t);return i?(i.sourceLayer=i.layer=null,this._idToGraphic.delete(t),i):null}update(t,i){this.onUpdate(t,i)}get size(){return this._idToGraphic.size}}let n=class extends C(M){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new T,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=_(this.connection),this.store=_(this.store),this.removeAllHandles()}_startup(){const{layer:e,layerView:t}=this,{spatialReference:i,definitionExpression:p,geometryDefinition:h,objectIdField:u,timeInfo:f,purgeOptions:v,maxReconnectionAttempts:I,maxReconnectionInterval:w,customParameters:S}=e,P=e.geometryType?O.toJSON(e.geometryType):null,b=i,m=t.view.spatialReference;this.clear(),this._set("connection",x(e.parsedUrl,b,m,P,p,h,I,w,S??void 0)),this._outSpatialReference=m.toJSON(),this.store=new F(this._onUpdate.bind(this)),this.featuresManager=new $(this.store,u,f.toJSON(),v);const y="startup-watches";this.removeHandles(y),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),g(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],y),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=d.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const i=performance.now(),p=i-t;if(p>D){t=i;const h=Math.round(this._updateInfo.client/(p/1e3)),u=Math.round(this._updateInfo.websocket/(p/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:h,websocket:u})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};s([r()],n.prototype,"isPaused",void 0),s([r({constructOnly:!0})],n.prototype,"layer",void 0),s([r({constructOnly:!0})],n.prototype,"layerView",void 0),s([r()],n.prototype,"connection",void 0),s([r({readOnly:!0})],n.prototype,"updating",null),n=s([l("esri.layers.graphics.controllers.StreamController")],n);let c=class extends V{constructor(e){super(e),this.suspendResumeExtentMode="computed"}get connection(){return this.controller?.connection}createController(){return new n({layer:this.layer,layerView:this.layerView})}beforeSetController(){}pause(){this.controller?.pauseStream()}resume(){this.controller?.resumeStream()}disconnect(){this.controller?.disconnect()}connect(){this.controller?.connect()}clear(){this.controller?.clearGraphics()}};s([r()],c.prototype,"controller",void 0),s([r()],c.prototype,"connection",null),s([r()],c.prototype,"suspendResumeExtentMode",void 0),c=s([l("esri.views.3d.layers.graphics.StreamGraphics3DGraphicsPipeline")],c);const z=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...i){super(...i),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(i){i?this._doPause():this._isUserPaused||this._doResume()}};return s([r()],t.prototype,"_isUserPaused",void 0),s([r({readOnly:!0})],t.prototype,"connectionStatus",null),s([r({type:N})],t.prototype,"filter",void 0),t=s([l("esri.views.layers.StreamLayerView")],t),t};let o=class extends z(E(j(L))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=k.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(g(()=>this.suspended,e=>{this.graphicsPipeline&&this._onSuspendedChange(e)}))}get connectionError(){const e=this.graphicsPipeline?.connection?.errorString;return e?new G("stream-controller",e):null}createQuery(){return new U({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t?.signal)}get _streamConnectionStatus(){return this.graphicsPipeline?.connection?.connectionStatus??"disconnected"}createGraphicsPipeline(){return new c({layerView:this})}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){this.graphicsPipeline?.pause()}_doResume(){this.graphicsPipeline?.resume()}_doDisconnect(){this.graphicsPipeline?.disconnect(),this._doPause()}_doConnect(){this.graphicsPipeline?.connect(),this.resume()}_doClear(){this.graphicsPipeline?.clear()}};s([r({readOnly:!0})],o.prototype,"updatePolicy",void 0),s([r({readOnly:!0})],o.prototype,"connectionError",null),s([r()],o.prototype,"graphicsPipeline",void 0),s([r({readOnly:!0})],o.prototype,"hasZ",void 0),s([r({readOnly:!0})],o.prototype,"hasM",void 0),s([r({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=s([l("esri.views.3d.layers.StreamLayerView3D")],o);const Ve=o;export{Ve as default};
