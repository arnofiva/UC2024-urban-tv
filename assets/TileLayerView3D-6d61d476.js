import{aH as o,at as l,aj as r,ak as s,am as p}from"./index-b9c5f9ae.js";import{l as n}from"./LayerView3D-2a51d3a6.js";import{p as m}from"./TiledLayerView3D-b993a69a.js";import{i as h}from"./fetchTile-2cc0bbc6.js";import{y as u}from"./LayerView-fa457db7.js";import{i as f}from"./RefreshableLayerView-355ffb88.js";import{U as y,_ as c}from"./MapServiceLayerViewHelper-b80a0566.js";import{r as d}from"./drapedUtils-05961b72.js";import"./RefreshableLayer-74f8ddcc.js";import"./layerContainerType-e1118fe6.js";import"./floorFilterUtils-73949d2d.js";import"./normalizeUtils-512dfd53.js";import"./normalizeUtilsCommon-050bf0c4.js";import"./sublayerUtils-9a468595.js";import"./popupUtils-a16b4cb5.js";let i=class extends f(m(n(u))){constructor(){super(...arguments),this.type="tile-3d",this._popupHighlightHelper=null}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get tileInfo(){return this.layer.tileInfo}initialize(){if(this.layer.type==="web-tile"){const e=this.layer.fullExtent?.spatialReference,t=this.layer.tileInfo?.spatialReference;if(e==null||t==null||!o(e,t)){const a=this.layer.originOf("fullExtent")==="defaults"||this.layer.fullExtent==null?"SceneView requires fullExtent to be specified by the user on WebTileLayer":"SceneView requires fullExtent to be specified in the same spatial reference as tileInfo on WebTileLayer";this.addResolvingPromise(Promise.reject(new l("layerview:incompatible-fullextent",a)))}}y(this,this.layer)&&(this._popupHighlightHelper=new c({createFetchPopupFeaturesQueryGeometry:(e,t)=>d(e,t,this.view),layerView:this,updatingHandles:this._updatingHandles})),this._addTilingSchemeMatchPromise()}destroy(){this._popupHighlightHelper?.destroy()}async fetchTile(e,t){return h(this,e,t)}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?.fetchPopupFeaturesAtLocation(e,t)??[]}async doRefresh(){this.suspended||this.emit("data-changed")}};r([s()],i.prototype,"imageFormatIsOpaque",null),r([s()],i.prototype,"hasMixedImageFormats",null),r([s()],i.prototype,"layer",void 0),r([s()],i.prototype,"tileInfo",null),i=r([p("esri.views.3d.layers.TileLayerView3D")],i);const V=i;export{V as default};
